name: Wheels

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  sdist:
    name: Source Distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install Requirements
        run: |
          pip install --user check-manifest twine==3.4.1
          pip install --user check-manifest pybind11==2.6.2
          pip install --user check-manifest cpufeature==0.2.0
          pip install --user check-manifest -r build_requirements.txt

      - name: Install vcpkg
        run: |
          echo "Cloning Microsoft vcpkg"
          git clone https://github.com/microsoft/vcpkg.git

          echo "Bootstrapping vcpkg"
          ./vcpkg/bootstrap-vcpkg.sh
        shell: bash

      - name: Inject Custom vcpkg Code
        continue-on-error: true
        run: |
          python vcpkghack.py ./vcpkg/ports/openblas/portfile.cmake
        shell: bash

      - name: Install OpenBLAS
        run: |
          echo "Installing OpenBLAS"
          ./vcpkg/vcpkg install openblas

          echo "Current directory"
          pwd

          echo "Files in 'packages' directory"
          ls ./vcpkg/packages

          echo "Files in 'openblas_x64-linux' directory"
          ls ./vcpkg/packages/openblas_x64-linux
        shell: bash
        env:
          OPENBLAS_NUM_THREADS: 128
          GOTO_NUM_THREADS: 128
          OMP_NUM_THREADS: 128

      - name: Build Source Distribution
        run: |
          python -m build --sdist --outdir wheelhouse
      
      - name: Install from Source Distribution
        run: |
          pip install --user wheelhouse/*.tar.gz

      - name: Run Python Tests
        run: |
          python -m pip install .
          python -m pytest

      - name: Check Source Distribution
        run: |
          python -m twine check wheelhouse/*

      - name: Upload Source Distribution
        run: |
          python setup.py sdist
          ls dist
          twine upload --skip-existing dist/* -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_PASSWORD }}

  wheels:
    name: Wheels â€¢ Running on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        targetplatform: [x64]
    env:
      CIBW_BUILD: "cp36-* cp37-* cp38-* cp39-*"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Requirements
        run: |
          python -m pip install -r build_requirements.txt

      - name: Install vcpkg
        run: |
          echo "Cloning Microsoft vcpkg"
          git clone https://github.com/microsoft/vcpkg.git
          
          echo "Bootstrapping vcpkg"
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Inject Custom vcpkg Code
        continue-on-error: true
        run: |
          python vcpkghack.py ./vcpkg/ports/openblas/portfile.cmake
        shell: bash

      - name: Install OpenBLAS
        run: |
          echo "Installing OpenBLAS"

          echo "Files in ./vcpkg:"
          ls vcpkg

          if [ "$RUNNER_OS" == "Windows" ]; then
            .\\vcpkg\\vcpkg install openblas --triplet=x86-windows
            .\\vcpkg\\vcpkg install openblas --triplet=x64-windows
          else
            ./vcpkg/vcpkg install openblas
          fi
          
          echo "Current directory"
          pwd

          echo "Files in 'packages' directory"
          ls ./vcpkg/packages

          echo "Files in 'openblas_x64-...' directory"
          if [ "$RUNNER_OS" == "Windows" ]; then
            ls ./vcpkg/packages/openblas_x64-windows
          elif [ "$RUNNER_OS" == "Linux" ]; then
            ls ./vcpkg/packages/openblas_x64-linux
          elif [ "$RUNNER_OS" == "macOS" ]; then
            ls ./vcpkg/packages/openblas_x64-osx
          else
            echo "$RUNNER_OS is not supported"
            exit 1
          fi
        shell: bash
        env:
          OPENBLAS_NUM_THREADS: 128
          GOTO_NUM_THREADS: 128
          OMP_NUM_THREADS: 128

      - name: Run cibuildwheel
        run: |
          cibuildwheel --output-dir wheelhouse

      - name: Build and Install Source Distribution
        run: |
          python setup.py sdist
          pip install .

      - name: Run Python Tests
        run: |
          pytest

      - name: Check Built Wheels
        run: |
          twine check wheelhouse/*

      - name: Upload Built Wheels
        run: |
          python setup.py sdist
          ls wheelhouse
          twine upload --skip-existing wheelhouse/* -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_PASSWORD }}
