language: python
os: linux
python:
  - 3.6
  - 3.7
  - 3.8
  - 3.9
env:
  global:
    - CIBW_BUILD=cp3?-*
    - CIBW_MANYLINUX_X86_64_IMAGE=manylinux1
    - CIBW_MANYLINUX_I686_IMAGE=manylinux1
    - TWINE_USERNAME=__token__
    - OPENBLAS_NUM_THREADS=128
    - GOTO_NUM_THREADS=128
    - OMP_NUM_THREADS=128

jobs:
  include:
    - services: docker

    - os: osx
      name: "Python: ?.?"
      language: generic
      osx_image: xcode12.4

    - os: osx
      name: "Python: ?.?"
      language: generic
      osx_image: xcode11.6

    - os: windows
      name: "Python: 3.7"
      language: bash
      before_install:
        - choco install python --version 3.7.0
        - choco install visualstudio2019community
        - choco install visualstudio2019-workload-nativedesktop
        - export VS160COMNTOOLS="/c/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/Tools"
        - export PATH="/c/Python37:/c/Python/Scripts:$PATH"

    - os: windows
      name: "Python: 3.8"
      language: bash
      before_install:
        - choco install python --version 3.8.0
        - choco install visualstudio2019community
        - choco install visualstudio2019-workload-nativedesktop
        - export VS160COMNTOOLS="/c/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/Tools"
        - export PATH="/c/Python38:/c/Python/Scripts:$PATH"

    - os: windows
      name: "Python: 3.9"
      language: bash
      before_install:
        - choco install python --version 3.9.0
        - choco install visualstudio2019community
        - choco install visualstudio2019-workload-nativedesktop
        - export VS160COMNTOOLS="/c/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/Tools"
        - export PATH="/c/Python39:/c/Python/Scripts:$PATH"

install:
  - python3 -m pip install -r build_requirements.txt || python -m pip install -r build_requirements.txt

script:
  - python3 --version || python --version
  - python3 setup.py sdist bdist_wheel || python setup.py sdist bdist_wheel
  - python3 -m pip install . || python -m pip install .
  - python3 -m pytest || python -m pytest

after_success:
  # If the release was tagged, upload them to PyPI
  - |
    if [[ $TRAVIS_TAG ]]; then
      python3 -m pip install twine
      python3 -m twine upload wheelhouse/*.whl
    fi
