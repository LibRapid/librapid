<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="global_8hpp" kind="file" language="C++">
    <compoundname>global.hpp</compoundname>
    <includedby refid="core_8hpp" local="yes">librapid/include/librapid/core/core.hpp</includedby>
    <invincdepgraph>
      <node id="4">
        <label>librapid/cxxblas/cxxblas.cxx</label>
        <link refid="cxxblas_8cxx"/>
      </node>
      <node id="3">
        <label>librapid/cxxblas/cxxblas.h</label>
        <link refid="cxxblas_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>librapid/cxxblas/level1/dot.h</label>
        <link refid="level1_2dot_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>librapid/cxxblas/level1/level1.h</label>
        <link refid="level1_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>librapid/include/librapid/core/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>librapid/include/librapid/core/global.hpp</label>
        <link refid="global_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>librapid/include/librapid/librapid.hpp</label>
        <link refid="librapid_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>librapid/src/global.cpp</label>
        <link refid="global_8cpp"/>
      </node>
      <node id="9">
        <label>librapid/src/helper_cuda.cpp</label>
        <link refid="helper__cuda_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacelibrapid">librapid</innernamespace>
    <innernamespace refid="namespacelibrapid_1_1global">librapid::global</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LIBRAPID_CORE_GLOBAL_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBRAPID_CORE_GLOBAL_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Global<sp/>variables<sp/>required<sp/>for<sp/>LibRapid,<sp/>such<sp/>as<sp/>version<sp/>number,<sp/>number<sp/>of<sp/>threads,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>CUDA-related<sp/>configuration,<sp/>etc.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespacelibrapid_1_1global" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibrapid_1_1global" kindref="compound">librapid::global</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>ASSERT<sp/>functions<sp/>error<sp/>or<sp/>throw<sp/>exceptions?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacelibrapid_1_1global_1a236b8ce82086753adb9cdfba77b7217a" kindref="member">throwOnAssert</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="namespacelibrapid_1_1global_1a90bac1d515a0f27808a6e8615ce467de" kindref="member">multithreadThreshold</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>columns<sp/>required<sp/>for<sp/>a<sp/>matrix<sp/>to<sp/>be<sp/>parallelized<sp/>in<sp/>GEMM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="namespacelibrapid_1_1global_1a9a333eca8249991061231bd463e99c2a" kindref="member">gemmMultithreadThreshold</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>threads<sp/>used<sp/>by<sp/>LibRapid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="namespacelibrapid_1_1global_1a008b586e9e2571b5863c6bb6cabebbe3" kindref="member">numThreads</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>librapid::global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>LIBRAPID_CORE_GLOBAL_HPP</highlight></codeline>
    </programlisting>
    <location file="librapid/include/librapid/core/global.hpp"/>
  </compounddef>
</doxygen>
