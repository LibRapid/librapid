<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="helper__math_8h" kind="file" language="C++">
    <compoundname>helper_math.h</compoundname>
    <includes local="yes">cuda_runtime.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="1">
        <label>librapid/include/librapid/cuda/helper_math.h</label>
        <link refid="helper__math_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cuda_runtime.h</label>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="helper__math_8h_1ad20838a18f49298dae4d0ee29a0bb7a9" prot="public" static="no">
        <name>EXIT_WAIVED</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="49" column="10" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int uint</definition>
        <argsstring></argsstring>
        <name>uint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="44" column="22" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="helper__math_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short ushort</definition>
        <argsstring></argsstring>
        <name>ushort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="46" column="24" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="helper__math_8h_1a550f4f667b306665a335168336fc95b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float fminf</definition>
        <argsstring>(float a, float b)</argsstring>
        <name>fminf</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="60" column="14" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float fmaxf</definition>
        <argsstring>(float a, float b)</argsstring>
        <name>fmaxf</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="62" column="14" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int max</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>max</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="64" column="12" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int min</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>min</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="66" column="12" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a03dd2c47cd23a00d16e39bfb75a2e6fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float rsqrtf</definition>
        <argsstring>(float x)</argsstring>
        <name>rsqrtf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="68" column="14" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 make_float2</definition>
        <argsstring>(float s)</argsstring>
        <name>make_float2</name>
        <param>
          <type>float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="79" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a1823a61ec2e6e1f3aa9633986d97e53a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 make_float2</definition>
        <argsstring>(float3 a)</argsstring>
        <name>make_float2</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="86" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a25aa9f2068c8a5086cb6e4d81e881497" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 make_float2</definition>
        <argsstring>(int2 a)</argsstring>
        <name>make_float2</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="93" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a931119b28bbeb119817cd0128f422a08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 make_float2</definition>
        <argsstring>(uint2 a)</argsstring>
        <name>make_float2</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="100" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 make_int2</definition>
        <argsstring>(int s)</argsstring>
        <name>make_int2</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="107" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ae61756ff3dc1ab198bee68dabd89b2ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 make_int2</definition>
        <argsstring>(int3 a)</argsstring>
        <name>make_int2</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="114" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ab168ef295a81a4e7aa2832400b567984" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 make_int2</definition>
        <argsstring>(uint2 a)</argsstring>
        <name>make_int2</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="121" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a50585f962a65c911776c25c10c24d5d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 make_int2</definition>
        <argsstring>(float2 a)</argsstring>
        <name>make_int2</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="128" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 make_uint2</definition>
        <argsstring>(uint s)</argsstring>
        <name>make_uint2</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="135" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1abbc2000421b607c0fffb193de779957b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 make_uint2</definition>
        <argsstring>(uint3 a)</argsstring>
        <name>make_uint2</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="142" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a3094c2b3e8e5fbddb78523e9e3f852fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 make_uint2</definition>
        <argsstring>(int2 a)</argsstring>
        <name>make_uint2</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="149" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 make_float3</definition>
        <argsstring>(float s)</argsstring>
        <name>make_float3</name>
        <param>
          <type>float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="156" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ab9370c14e8795ec39775092dae97f7e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 make_float3</definition>
        <argsstring>(float2 a)</argsstring>
        <name>make_float3</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="163" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afbf5b34e3b157d9c0e0a72a21f684619" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 make_float3</definition>
        <argsstring>(float2 a, float s)</argsstring>
        <name>make_float3</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="170" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a16eea6410ca5c145348eeb5586f75286" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 make_float3</definition>
        <argsstring>(float4 a)</argsstring>
        <name>make_float3</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="177" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a129b8aec63310cd59348ac83ca2e17fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 make_float3</definition>
        <argsstring>(int3 a)</argsstring>
        <name>make_float3</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="184" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a4bee55da9c55a6ae787fca2d7ac67213" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 make_float3</definition>
        <argsstring>(uint3 a)</argsstring>
        <name>make_float3</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="191" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 make_int3</definition>
        <argsstring>(int s)</argsstring>
        <name>make_int3</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="198" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afcf55d96866f5e6d69793bc86060fdfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 make_int3</definition>
        <argsstring>(int2 a)</argsstring>
        <name>make_int3</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="205" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a8254230af6ef58254ad19e744b24760e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 make_int3</definition>
        <argsstring>(int2 a, int s)</argsstring>
        <name>make_int3</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="212" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a51515ac4cb5c2ba899cce09ee31b3764" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 make_int3</definition>
        <argsstring>(uint3 a)</argsstring>
        <name>make_int3</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="219" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac3a5d29d27669d59fea890dbaac58338" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 make_int3</definition>
        <argsstring>(float3 a)</argsstring>
        <name>make_int3</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="226" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 make_uint3</definition>
        <argsstring>(uint s)</argsstring>
        <name>make_uint3</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="233" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a5e8423baf776bebe1a2dbe99d5abcb53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 make_uint3</definition>
        <argsstring>(uint2 a)</argsstring>
        <name>make_uint3</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="240" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a1c822e665bf1b79cb60dc7aed45365a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 make_uint3</definition>
        <argsstring>(uint2 a, uint s)</argsstring>
        <name>make_uint3</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="247" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ab7c3d47690fa70bc7c402f3c51ca09e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 make_uint3</definition>
        <argsstring>(uint4 a)</argsstring>
        <name>make_uint3</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="254" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="254" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a206cc78a8c176ee16f2c128ce9cb6d74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 make_uint3</definition>
        <argsstring>(int3 a)</argsstring>
        <name>make_uint3</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="261" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 make_float4</definition>
        <argsstring>(float s)</argsstring>
        <name>make_float4</name>
        <param>
          <type>float</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="268" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="268" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a4bd54a2c024a4690628ca6765b58c27f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 make_float4</definition>
        <argsstring>(float3 a)</argsstring>
        <name>make_float4</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="275" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1adbd30073dc4eab10e0f37063f355b4d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 make_float4</definition>
        <argsstring>(float3 a, float w)</argsstring>
        <name>make_float4</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="282" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a90cdcb095eafa84ef078bdc8d7a58588" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 make_float4</definition>
        <argsstring>(int4 a)</argsstring>
        <name>make_float4</name>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="289" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="289" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ad4fbc0d36eff701191063233fa7643b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 make_float4</definition>
        <argsstring>(uint4 a)</argsstring>
        <name>make_float4</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="296" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="296" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 make_int4</definition>
        <argsstring>(int s)</argsstring>
        <name>make_int4</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="303" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2374cd64552e8716f8e4f5194484fd2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 make_int4</definition>
        <argsstring>(int3 a)</argsstring>
        <name>make_int4</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="310" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="310" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a7299fe77f53a27dee58f08b0401a035a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 make_int4</definition>
        <argsstring>(int3 a, int w)</argsstring>
        <name>make_int4</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="317" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="317" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a1a625b9f03f45a4b09648cb79e0270bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 make_int4</definition>
        <argsstring>(uint4 a)</argsstring>
        <name>make_int4</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="324" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="324" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0230f6765dc22238288c734a6afd53ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 make_int4</definition>
        <argsstring>(float4 a)</argsstring>
        <name>make_int4</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="331" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="331" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 make_uint4</definition>
        <argsstring>(uint s)</argsstring>
        <name>make_uint4</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="338" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="338" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a622e6d9f0fde597549dae79b03e6c7d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 make_uint4</definition>
        <argsstring>(uint3 a)</argsstring>
        <name>make_uint4</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="345" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="345" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a55216df3e4e30b42ddd5af2e6cae02a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 make_uint4</definition>
        <argsstring>(uint3 a, uint w)</argsstring>
        <name>make_uint4</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="352" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="352" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aaea5bdeca43377b1ca682d020d6ed583" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 make_uint4</definition>
        <argsstring>(int4 a)</argsstring>
        <name>make_uint4</name>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="359" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="359" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator-</definition>
        <argsstring>(float2 &amp;a)</argsstring>
        <name>operator-</name>
        <param>
          <type>float2 &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="370" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="370" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa2a017587dafe51d6a2aa0ac393d4cea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 operator-</definition>
        <argsstring>(int2 &amp;a)</argsstring>
        <name>operator-</name>
        <param>
          <type>int2 &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="377" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="377" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a13c460bf0477142ba40606d7f4d20a90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator-</definition>
        <argsstring>(float3 &amp;a)</argsstring>
        <name>operator-</name>
        <param>
          <type>float3 &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="384" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="384" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a26c49763a45d00cd11d802e00c52ae30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 operator-</definition>
        <argsstring>(int3 &amp;a)</argsstring>
        <name>operator-</name>
        <param>
          <type>int3 &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="391" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="391" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aae7e93cd36d263560cf8535af5212d4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator-</definition>
        <argsstring>(float4 &amp;a)</argsstring>
        <name>operator-</name>
        <param>
          <type>float4 &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="398" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="398" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afd25a9db28fe7138f38b13c2888303b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 operator-</definition>
        <argsstring>(int4 &amp;a)</argsstring>
        <name>operator-</name>
        <param>
          <type>int4 &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="405" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="405" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator+</definition>
        <argsstring>(float2 a, float2 b)</argsstring>
        <name>operator+</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="416" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="416" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(float2 &amp;a, float2 b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>float2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="423" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="423" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a45efa1f9d0f6e3a6f4959a8b414332b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator+</definition>
        <argsstring>(float2 a, float b)</argsstring>
        <name>operator+</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="431" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="431" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af21e0f9591dbec80b3a4b778741fdd1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator+</definition>
        <argsstring>(float b, float2 a)</argsstring>
        <name>operator+</name>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="438" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="438" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a1f9d6e667f300092ac62f9b26dfcfd4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(float2 &amp;a, float b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>float2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="445" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="445" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac2c1c606d303052b7d6ac2a0a8d3a359" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 operator+</definition>
        <argsstring>(int2 a, int2 b)</argsstring>
        <name>operator+</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="453" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="453" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a9e4431a46cf667f33f0448791ed5467c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(int2 &amp;a, int2 b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>int2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="460" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="460" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ab8bfe46384be930c2b3b8485b6c63d3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 operator+</definition>
        <argsstring>(int2 a, int b)</argsstring>
        <name>operator+</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="468" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="468" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aaefd6f9bff787b2e5fa5016ce48274c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 operator+</definition>
        <argsstring>(int b, int2 a)</argsstring>
        <name>operator+</name>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="475" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="475" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a049e90718d67a941c14211231346fcc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(int2 &amp;a, int b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>int2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="482" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="482" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afac48af87e5962ea3d6417d181472ffb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 operator+</definition>
        <argsstring>(uint2 a, uint2 b)</argsstring>
        <name>operator+</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="490" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="490" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aec6758ea15ded195757c534be014f6f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(uint2 &amp;a, uint2 b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>uint2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="497" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a215adf938ae85de85f1d4ac1a01aca97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 operator+</definition>
        <argsstring>(uint2 a, uint b)</argsstring>
        <name>operator+</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="505" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="505" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a9748d49986dbd69fb732b81f4fa93aad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 operator+</definition>
        <argsstring>(uint b, uint2 a)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="512" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="512" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1adfd4133b456ffc42bc85af9fb2e8a4a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(uint2 &amp;a, uint b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>uint2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="519" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="519" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2d6165328ff6cc4542f56a815ab992a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator+</definition>
        <argsstring>(float3 a, float3 b)</argsstring>
        <name>operator+</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="527" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="527" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1abc9bcbeeb5a34af30746f5b0d186d050" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(float3 &amp;a, float3 b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>float3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="534" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="534" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a6c34592ef6bbc2da5a2832fa35bd9a8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator+</definition>
        <argsstring>(float3 a, float b)</argsstring>
        <name>operator+</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="543" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="543" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac071c7d8bfa65de4ff1aa6a274e4db88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(float3 &amp;a, float b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>float3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="550" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="550" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ade23035ad90bdaeb84fef16038074110" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 operator+</definition>
        <argsstring>(int3 a, int3 b)</argsstring>
        <name>operator+</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="559" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="559" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a5c0f140fc8c3250b61805836d0488bd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(int3 &amp;a, int3 b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>int3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="566" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="566" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a4353229a68fe4399a971683a4ef6d0f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 operator+</definition>
        <argsstring>(int3 a, int b)</argsstring>
        <name>operator+</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="575" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="575" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0d35e08d590897886fbcb1d79b44d620" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(int3 &amp;a, int b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>int3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="582" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="582" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1adfe110726dcfa14c67b075dd14b5a703" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 operator+</definition>
        <argsstring>(uint3 a, uint3 b)</argsstring>
        <name>operator+</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="591" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="591" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ababf7d386e7618694f5df29fe03b422c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(uint3 &amp;a, uint3 b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>uint3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="598" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="598" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a76083831bcb12adb3afda03ed079a055" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 operator+</definition>
        <argsstring>(uint3 a, uint b)</argsstring>
        <name>operator+</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="607" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="607" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2b9aef0679cb047130392334ee636baf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(uint3 &amp;a, uint b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>uint3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="614" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="614" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a788b4d03c81205bf0567519a2d586478" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 operator+</definition>
        <argsstring>(int b, int3 a)</argsstring>
        <name>operator+</name>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="623" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="623" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a58aa5970ff73f2d7f13bc0b49a5e6070" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 operator+</definition>
        <argsstring>(uint b, uint3 a)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="630" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="630" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ad754172978b703f49aed29450e7c6580" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator+</definition>
        <argsstring>(float b, float3 a)</argsstring>
        <name>operator+</name>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="637" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="637" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a55e9b703f5296a9d8b12e87d64975d43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator+</definition>
        <argsstring>(float4 a, float4 b)</argsstring>
        <name>operator+</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="644" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="644" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1adad7f53eab267caf355ffdaf717f4ad5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(float4 &amp;a, float4 b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>float4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="651" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="651" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a75b5ab509cb131570f0bb07f8075f43a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator+</definition>
        <argsstring>(float4 a, float b)</argsstring>
        <name>operator+</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="661" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="661" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a41696e13215c5c8ed2375fb707ea74dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator+</definition>
        <argsstring>(float b, float4 a)</argsstring>
        <name>operator+</name>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="668" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="668" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a3285647d09ea06320d1126e7a45903ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(float4 &amp;a, float b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>float4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="675" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="675" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a21fc85d43b00fdaffa214fbb030293e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 operator+</definition>
        <argsstring>(int4 a, int4 b)</argsstring>
        <name>operator+</name>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="685" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="685" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a7d724f81f355ab93b51a62b39d70fada" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(int4 &amp;a, int4 b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>int4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="692" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="692" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a56f46f44c69989c868081bfa07a5d4eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 operator+</definition>
        <argsstring>(int4 a, int b)</argsstring>
        <name>operator+</name>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="702" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="702" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a84292bb1bdb8fa70961b76f9e4563fce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 operator+</definition>
        <argsstring>(int b, int4 a)</argsstring>
        <name>operator+</name>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="709" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="709" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a087d4fa0a702c7e6772a4ad7f2df9906" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(int4 &amp;a, int b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>int4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="716" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="716" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1abe5884849d9027d17f8db14edea8a662" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 operator+</definition>
        <argsstring>(uint4 a, uint4 b)</argsstring>
        <name>operator+</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="726" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="726" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a3d39a0f12765010f2a209d154971de75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(uint4 &amp;a, uint4 b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>uint4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="733" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="733" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a3d75fa4adcda7d8eb361bbd7a75d8c11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 operator+</definition>
        <argsstring>(uint4 a, uint b)</argsstring>
        <name>operator+</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="743" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="743" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aeb1a164a301f3ffc4befe5901826eadd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 operator+</definition>
        <argsstring>(uint b, uint4 a)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="750" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="750" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a9fb362dfe6bcec4bcf1a59d8c41aa0bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator+=</definition>
        <argsstring>(uint4 &amp;a, uint b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>uint4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="757" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="757" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a6cc46f5cc50bd5f0cff7a0fd69fee5db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator-</definition>
        <argsstring>(float2 a, float2 b)</argsstring>
        <name>operator-</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="771" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="771" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(float2 &amp;a, float2 b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>float2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="778" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="778" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aabd11d734658e0ebf5de5740970bf82d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator-</definition>
        <argsstring>(float2 a, float b)</argsstring>
        <name>operator-</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="786" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="786" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af9022f4af2518d79f08120775476604a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator-</definition>
        <argsstring>(float b, float2 a)</argsstring>
        <name>operator-</name>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="793" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="793" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a5c92bad3b3579fb468cf417278834d17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(float2 &amp;a, float b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>float2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="800" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="800" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1abb3a3e03a44492443c19dcb4154da9c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 operator-</definition>
        <argsstring>(int2 a, int2 b)</argsstring>
        <name>operator-</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="808" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="808" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aea88625b90f1e26e3dd4ef4a975ce294" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(int2 &amp;a, int2 b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>int2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="815" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="815" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a4f87f263c55ecf10afb677cbc005f781" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 operator-</definition>
        <argsstring>(int2 a, int b)</argsstring>
        <name>operator-</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="823" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="823" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a3728a7d7d2b281b55d3c788a539dfe76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 operator-</definition>
        <argsstring>(int b, int2 a)</argsstring>
        <name>operator-</name>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="830" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="830" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aeffe196c72b8678f21bef222c800c481" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(int2 &amp;a, int b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>int2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="837" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="837" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a5eff670232c718087a9066549273f601" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 operator-</definition>
        <argsstring>(uint2 a, uint2 b)</argsstring>
        <name>operator-</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="845" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="845" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0ae38d598e3e6f69481ecbc2eaa48569" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(uint2 &amp;a, uint2 b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>uint2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="852" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="852" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a86fdb2dc9e19c3bfa073254419ae0a0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 operator-</definition>
        <argsstring>(uint2 a, uint b)</argsstring>
        <name>operator-</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="860" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="860" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a6c6dace1a42a8f4573b3438e1bfb2cb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 operator-</definition>
        <argsstring>(uint b, uint2 a)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="867" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="867" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ae9f6f783e478f70750c82d864641b47d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(uint2 &amp;a, uint b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>uint2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="874" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="874" bodyend="877"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2e6abc29e0daaf87bb76886e3927689a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator-</definition>
        <argsstring>(float3 a, float3 b)</argsstring>
        <name>operator-</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="882" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="882" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ad15076d1a17ef0c9acef7452a6969614" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(float3 &amp;a, float3 b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>float3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="889" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="889" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa540cfdc48ffab4088d9294b462a3e76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator-</definition>
        <argsstring>(float3 a, float b)</argsstring>
        <name>operator-</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="898" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="898" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a6daa29e43c17c328380cd128983439c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator-</definition>
        <argsstring>(float b, float3 a)</argsstring>
        <name>operator-</name>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="905" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="905" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af9ba13e9aa84ad750a2658951ed7e435" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(float3 &amp;a, float b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>float3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="912" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="912" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a43abb92d48055eaecca3f168410d5625" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 operator-</definition>
        <argsstring>(int3 a, int3 b)</argsstring>
        <name>operator-</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="921" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="921" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a177ec0c353e7120c0276254a128e4cb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(int3 &amp;a, int3 b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>int3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="928" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="928" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a01579d935871f027c412fa6376e254a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 operator-</definition>
        <argsstring>(int3 a, int b)</argsstring>
        <name>operator-</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="937" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="937" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1abeeac4a47e9ab5116536a334bf23cd81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 operator-</definition>
        <argsstring>(int b, int3 a)</argsstring>
        <name>operator-</name>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="944" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="944" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0e054427ef70473a892d33d243d947f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(int3 &amp;a, int b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>int3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="951" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="951" bodyend="955"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a526d1e2ebbb39ddc90f207d989472fb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 operator-</definition>
        <argsstring>(uint3 a, uint3 b)</argsstring>
        <name>operator-</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="960" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="960" bodyend="962"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac7d8dcfe50c16fe9a52163bcf24603c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(uint3 &amp;a, uint3 b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>uint3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="967" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="967" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a9718b3ce657f79598000b28f67dad03c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 operator-</definition>
        <argsstring>(uint3 a, uint b)</argsstring>
        <name>operator-</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="976" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="976" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a01256999d918c8b8c729b7add2ec0376" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 operator-</definition>
        <argsstring>(uint b, uint3 a)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="983" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="983" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afd8ed48e8cbed4760ee8cf1f02426c30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(uint3 &amp;a, uint b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>uint3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="990" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="990" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afe5fa03c9ef3d209ae6b891ca28eb6d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator-</definition>
        <argsstring>(float4 a, float4 b)</argsstring>
        <name>operator-</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="999" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="999" bodyend="1001"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a12e8cbc1bebe88b25dde93e7cb63ab31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(float4 &amp;a, float4 b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>float4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1006" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1006" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aac50d350a85a37edc197928c3cccc657" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator-</definition>
        <argsstring>(float4 a, float b)</argsstring>
        <name>operator-</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1016" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1016" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2ffc7077fc686a759d2b4bf241dcf688" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(float4 &amp;a, float b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>float4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1023" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1023" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a1fb91e3f5f594852d1df0bf7eba6a127" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 operator-</definition>
        <argsstring>(int4 a, int4 b)</argsstring>
        <name>operator-</name>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1033" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1033" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af8c6a8b21f3ee4c04c230c22fdd454ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(int4 &amp;a, int4 b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>int4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1040" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1040" bodyend="1045"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a1195cc83f476b0da17cef4fe9a2c00bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 operator-</definition>
        <argsstring>(int4 a, int b)</argsstring>
        <name>operator-</name>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1050" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1050" bodyend="1052"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a42ac63a20d3bb1779e068a3a742db311" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 operator-</definition>
        <argsstring>(int b, int4 a)</argsstring>
        <name>operator-</name>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1057" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1057" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1abbfa490d644bf42e0859836c217ec1ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(int4 &amp;a, int b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>int4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1064" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1064" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0d2ec3b1d26384f29b2cdbc03cf7cd1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 operator-</definition>
        <argsstring>(uint4 a, uint4 b)</argsstring>
        <name>operator-</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1074" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1074" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a1c6478f6899260f365f6fc106b318752" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(uint4 &amp;a, uint4 b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>uint4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1081" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1081" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ae2498413878fb3238e97c6fe89b30e8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 operator-</definition>
        <argsstring>(uint4 a, uint b)</argsstring>
        <name>operator-</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1091" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1091" bodyend="1093"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a1c2f5f7cb28afeb60339d4bec581db3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 operator-</definition>
        <argsstring>(uint b, uint4 a)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1098" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1098" bodyend="1100"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a16adc69af375a6ce68996df7631690b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator-=</definition>
        <argsstring>(uint4 &amp;a, uint b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>uint4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1105" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1105" bodyend="1110"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator*</definition>
        <argsstring>(float2 a, float2 b)</argsstring>
        <name>operator*</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1119" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1119" bodyend="1121"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(float2 &amp;a, float2 b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1126" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1126" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0f2708666c88e53d856b34e979be20b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator*</definition>
        <argsstring>(float2 a, float b)</argsstring>
        <name>operator*</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1134" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1134" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a1ef2619ea80686bd7c7863809d288ba5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator*</definition>
        <argsstring>(float b, float2 a)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1141" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1141" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ae1d74155061d4d944088c98ee0298181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(float2 &amp;a, float b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1148" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1148" bodyend="1151"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af87d56b7874c3bfec0de4c6fd8ae625e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 operator*</definition>
        <argsstring>(int2 a, int2 b)</argsstring>
        <name>operator*</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1156" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1156" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ab9bf48034bdbcb0427fb9dfcef87dee2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(int2 &amp;a, int2 b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>int2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1163" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1163" bodyend="1166"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a953ef65975cb4a7988748760f2b2077b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 operator*</definition>
        <argsstring>(int2 a, int b)</argsstring>
        <name>operator*</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1171" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1171" bodyend="1173"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a446049af45d0c7a0c108f731185a1c74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 operator*</definition>
        <argsstring>(int b, int2 a)</argsstring>
        <name>operator*</name>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1178" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1178" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a57578141840e8ccefdfbd3182d4514c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(int2 &amp;a, int b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>int2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1185" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1185" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ae340fa5e9807f9eca945fd9551b6f26c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 operator*</definition>
        <argsstring>(uint2 a, uint2 b)</argsstring>
        <name>operator*</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1193" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1193" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a04068e86ec46cf5212bc0343f878783f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(uint2 &amp;a, uint2 b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>uint2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1200" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1200" bodyend="1203"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a98df384c8f83292aad43b8f6ee13d0cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 operator*</definition>
        <argsstring>(uint2 a, uint b)</argsstring>
        <name>operator*</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1208" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1208" bodyend="1210"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aeac80f0d4f81164a6005394d25150ff0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 operator*</definition>
        <argsstring>(uint b, uint2 a)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1215" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1215" bodyend="1217"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ad887ba35d0532887c1fd4c7810a9a4d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(uint2 &amp;a, uint b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>uint2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1222" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1222" bodyend="1225"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ad0d3c9c8703577ba6c9c688c882d402d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator*</definition>
        <argsstring>(float3 a, float3 b)</argsstring>
        <name>operator*</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1230" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1230" bodyend="1232"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a042f6ee4cc5408fe9ee2466c0248ab26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(float3 &amp;a, float3 b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1237" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1237" bodyend="1241"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a8aef88d76c6caa64f8bb38b71d23811c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator*</definition>
        <argsstring>(float3 a, float b)</argsstring>
        <name>operator*</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1246" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1246" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a54e26bce92f997cb715626fc58f8ab5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator*</definition>
        <argsstring>(float b, float3 a)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1253" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1253" bodyend="1255"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a6ce7f1475d8aab976a3e9aecf7bccd66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(float3 &amp;a, float b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1260" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1260" bodyend="1264"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ae2395fa25fedaa9f7d54d253fd41e446" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 operator*</definition>
        <argsstring>(int3 a, int3 b)</argsstring>
        <name>operator*</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1269" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1269" bodyend="1271"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a6b3a11de4915413b0b930a52a1e0011e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(int3 &amp;a, int3 b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>int3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1276" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1276" bodyend="1280"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a263b3db3bd2fecf9d57ff5c0076fee8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 operator*</definition>
        <argsstring>(int3 a, int b)</argsstring>
        <name>operator*</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1285" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1285" bodyend="1287"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac983d345616adca1535b8d434019b0ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 operator*</definition>
        <argsstring>(int b, int3 a)</argsstring>
        <name>operator*</name>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1292" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1292" bodyend="1294"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a82fd655dafc9d13218a9ed1a49cc511d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(int3 &amp;a, int b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>int3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1299" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1299" bodyend="1303"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac89b8c40de13d2f1a95cae298789b468" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 operator*</definition>
        <argsstring>(uint3 a, uint3 b)</argsstring>
        <name>operator*</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1308" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1308" bodyend="1310"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac9e3e676566d64db202254ef4c602194" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(uint3 &amp;a, uint3 b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>uint3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1315" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1315" bodyend="1319"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0a1ffe6cef9a7c2a2cc23f41e32daf34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 operator*</definition>
        <argsstring>(uint3 a, uint b)</argsstring>
        <name>operator*</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1324" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1324" bodyend="1326"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ab3a015469ea502066f0a2f448d3d9166" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 operator*</definition>
        <argsstring>(uint b, uint3 a)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1331" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1331" bodyend="1333"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac30fe031aa979852fe32627f15d45ab4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(uint3 &amp;a, uint b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>uint3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1338" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1338" bodyend="1342"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa79ec1961ab5b063ffaa382d57039cea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator*</definition>
        <argsstring>(float4 a, float4 b)</argsstring>
        <name>operator*</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1347" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1347" bodyend="1349"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a62fcbb6894ddade365bc89f9128e6c9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(float4 &amp;a, float4 b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1354" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1354" bodyend="1359"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac7e568526659a104f9c3b3f3a863b76e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator*</definition>
        <argsstring>(float4 a, float b)</argsstring>
        <name>operator*</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1364" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1364" bodyend="1366"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1adb820b73830dffd266502601044b14fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator*</definition>
        <argsstring>(float b, float4 a)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1371" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1371" bodyend="1373"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a30bcc3374c27697a07b220631a67cdf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(float4 &amp;a, float b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1378" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1378" bodyend="1383"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1acde64949fbcc5f3300719c4e9ffa297d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 operator*</definition>
        <argsstring>(int4 a, int4 b)</argsstring>
        <name>operator*</name>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1388" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1388" bodyend="1390"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2157668f44d6d5000cbe0774b9253829" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(int4 &amp;a, int4 b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>int4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1395" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1395" bodyend="1400"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a4de4a5f61c6e5098515a369e10ae1f5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 operator*</definition>
        <argsstring>(int4 a, int b)</argsstring>
        <name>operator*</name>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1405" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1405" bodyend="1407"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af23b7528b681621cb21aaf5527971649" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 operator*</definition>
        <argsstring>(int b, int4 a)</argsstring>
        <name>operator*</name>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1412" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1412" bodyend="1414"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a47295bc56c32bfe456c123e7db992ae4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(int4 &amp;a, int b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>int4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1419" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1419" bodyend="1424"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af0103dc52a4425925fd3f8c3481d9a21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 operator*</definition>
        <argsstring>(uint4 a, uint4 b)</argsstring>
        <name>operator*</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1429" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1429" bodyend="1431"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a060c2c4cbeed470a705ca4c141ea8edd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(uint4 &amp;a, uint4 b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>uint4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1436" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1436" bodyend="1441"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a56d003d2a289af0de90fce0f9b2c634d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 operator*</definition>
        <argsstring>(uint4 a, uint b)</argsstring>
        <name>operator*</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1446" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1446" bodyend="1448"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2be6e75cebfa87afcd004bccb00eab56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 operator*</definition>
        <argsstring>(uint b, uint4 a)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1453" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1453" bodyend="1455"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af7fd6e0eac5f4bfdba238717b526229d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator*=</definition>
        <argsstring>(uint4 &amp;a, uint b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>uint4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1460" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1460" bodyend="1465"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2778db976af87b1e1e3222b716806de7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator/</definition>
        <argsstring>(float2 a, float2 b)</argsstring>
        <name>operator/</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1474" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1474" bodyend="1476"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a6bb1f7c6f144b7d47c334c7354c7f6cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator/=</definition>
        <argsstring>(float2 &amp;a, float2 b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1481" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1481" bodyend="1484"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afb489248f1d5384266624387b2f8af68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator/</definition>
        <argsstring>(float2 a, float b)</argsstring>
        <name>operator/</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1489" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1489" bodyend="1491"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1adfa0bd10b4524776ba513b17d458047d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator/=</definition>
        <argsstring>(float2 &amp;a, float b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float2 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1496" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1496" bodyend="1499"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a4a71826a673363eb0f60ba5a3d2b1279" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 operator/</definition>
        <argsstring>(float b, float2 a)</argsstring>
        <name>operator/</name>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1504" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1504" bodyend="1506"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a550637f7c0c6efac2589120c47fef0a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator/</definition>
        <argsstring>(float3 a, float3 b)</argsstring>
        <name>operator/</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1511" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1511" bodyend="1513"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1adb24839aab2f07ce73c08c2ae0743e9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator/=</definition>
        <argsstring>(float3 &amp;a, float3 b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1518" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1518" bodyend="1522"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a357c54e0a0040d91efbdc9973a722ad2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator/</definition>
        <argsstring>(float3 a, float b)</argsstring>
        <name>operator/</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1527" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1527" bodyend="1529"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a354df0544ff3892b5c3cfb81a1c0397c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator/=</definition>
        <argsstring>(float3 &amp;a, float b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float3 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1534" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1534" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ae0fc4c059957728a772ba2ff4d531ab9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 operator/</definition>
        <argsstring>(float b, float3 a)</argsstring>
        <name>operator/</name>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1543" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1543" bodyend="1545"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a70bc23a55f3cc4d26b45044fa99d6d61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator/</definition>
        <argsstring>(float4 a, float4 b)</argsstring>
        <name>operator/</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1550" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1550" bodyend="1552"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afeddff2d8dce0e0ca15152ef9f3b6c6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator/=</definition>
        <argsstring>(float4 &amp;a, float4 b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1557" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1557" bodyend="1562"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a690784b2d6b2d79ba5b091c7a57338f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator/</definition>
        <argsstring>(float4 a, float b)</argsstring>
        <name>operator/</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1567" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1567" bodyend="1569"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a25c65bb4f9658c6bed436bdc83158a3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ void</type>
        <definition>__host__ __device__ void operator/=</definition>
        <argsstring>(float4 &amp;a, float b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float4 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1574" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1574" bodyend="1579"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ad64ba102fc8094ae523b2535be62cf10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 operator/</definition>
        <argsstring>(float b, float4 a)</argsstring>
        <name>operator/</name>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1584" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1584" bodyend="1586"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a273d356570807ab4546038f5792077b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 fminf</definition>
        <argsstring>(float2 a, float2 b)</argsstring>
        <name>fminf</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1595" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1595" bodyend="1597"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afdb8567710b900ab3f50d023282e3f37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 fminf</definition>
        <argsstring>(float3 a, float3 b)</argsstring>
        <name>fminf</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1602" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1602" bodyend="1604"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1accc123056028156af4471d825045701c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 fminf</definition>
        <argsstring>(float4 a, float4 b)</argsstring>
        <name>fminf</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1609" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1609" bodyend="1611"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a4d54be3b6388d6a2a0d095b880de4d4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 min</definition>
        <argsstring>(int2 a, int2 b)</argsstring>
        <name>min</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1616" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1616" bodyend="1618"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1abe4b67087a13d8e4b8fd2d1333f05212" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 min</definition>
        <argsstring>(int3 a, int3 b)</argsstring>
        <name>min</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1623" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1623" bodyend="1625"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a9639a84213d2969e42ab11c25dd0d680" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 min</definition>
        <argsstring>(int4 a, int4 b)</argsstring>
        <name>min</name>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1630" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1630" bodyend="1632"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1adee4157b656ec731b83abe9389e9f054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 min</definition>
        <argsstring>(uint2 a, uint2 b)</argsstring>
        <name>min</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1637" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1637" bodyend="1639"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa85502e2b039b0145f512a848e70fa04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 min</definition>
        <argsstring>(uint3 a, uint3 b)</argsstring>
        <name>min</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1644" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1644" bodyend="1646"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a76f3d844135ecc32365294158d274eed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 min</definition>
        <argsstring>(uint4 a, uint4 b)</argsstring>
        <name>min</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1651" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1651" bodyend="1653"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0ac776761f333de82e2477b1d7c3d54f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 fmaxf</definition>
        <argsstring>(float2 a, float2 b)</argsstring>
        <name>fmaxf</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1662" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1662" bodyend="1664"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa0e0b97a8c683602220c9509d12adefa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 fmaxf</definition>
        <argsstring>(float3 a, float3 b)</argsstring>
        <name>fmaxf</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1669" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1669" bodyend="1671"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0c102756578f129d7b0fde92ae6ca987" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 fmaxf</definition>
        <argsstring>(float4 a, float4 b)</argsstring>
        <name>fmaxf</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1676" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1676" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0d1da99482e200287b0c786ff8f769eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 max</definition>
        <argsstring>(int2 a, int2 b)</argsstring>
        <name>max</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1683" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1683" bodyend="1685"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a86bb61d22c0e88f85b47d9834f0ec34b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 max</definition>
        <argsstring>(int3 a, int3 b)</argsstring>
        <name>max</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1690" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1690" bodyend="1692"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a536ce9f92539916f71e252ab6397126c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 max</definition>
        <argsstring>(int4 a, int4 b)</argsstring>
        <name>max</name>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1697" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1697" bodyend="1699"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ab3930c0956d728e3848e3bc6b369ec58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint2</type>
        <definition>__host__ __device__ uint2 max</definition>
        <argsstring>(uint2 a, uint2 b)</argsstring>
        <name>max</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1704" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1704" bodyend="1706"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aec767b936d087f7dcf3f0a19bf48b7f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint3</type>
        <definition>__host__ __device__ uint3 max</definition>
        <argsstring>(uint3 a, uint3 b)</argsstring>
        <name>max</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1711" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1711" bodyend="1713"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ad71de797aaa84d9c6a604b3d429fdbca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ uint4</type>
        <definition>__host__ __device__ uint4 max</definition>
        <argsstring>(uint4 a, uint4 b)</argsstring>
        <name>max</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1718" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1718" bodyend="1720"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0c247aca1e9207d5e20ae113f2a96ba5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float</type>
        <definition>__device__ __host__ float lerp</definition>
        <argsstring>(float a, float b, float t)</argsstring>
        <name>lerp</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1730" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1730" bodyend="1732"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afa01684596e75b742f63e0d41a1550c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float2</type>
        <definition>__device__ __host__ float2 lerp</definition>
        <argsstring>(float2 a, float2 b, float t)</argsstring>
        <name>lerp</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1737" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1737" bodyend="1739"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a6c6e32fb99074314ba8260052d28499c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float3</type>
        <definition>__device__ __host__ float3 lerp</definition>
        <argsstring>(float3 a, float3 b, float t)</argsstring>
        <name>lerp</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1744" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1744" bodyend="1746"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a6d2ec5d361f7fba020dcd34c41fd84a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float4</type>
        <definition>__device__ __host__ float4 lerp</definition>
        <argsstring>(float4 a, float4 b, float t)</argsstring>
        <name>lerp</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1751" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1751" bodyend="1753"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float</type>
        <definition>__device__ __host__ float clamp</definition>
        <argsstring>(float f, float a, float b)</argsstring>
        <name>clamp</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1763" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1763" bodyend="1765"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a71bcfdcaaea698c7db05f2a7cf13610d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ int</type>
        <definition>__device__ __host__ int clamp</definition>
        <argsstring>(int f, int a, int b)</argsstring>
        <name>clamp</name>
        <param>
          <type>int</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1769" column="5" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1769" bodyend="1772"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2ded928128f511790e69096352fcefb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ <ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>__device__ __host__ uint clamp</definition>
        <argsstring>(uint f, uint a, uint b)</argsstring>
        <name>clamp</name>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1777" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1777" bodyend="1779"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a96f3477b0c986285c1e8961a91c03318" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float2</type>
        <definition>__device__ __host__ float2 clamp</definition>
        <argsstring>(float2 v, float a, float b)</argsstring>
        <name>clamp</name>
        <param>
          <type>float2</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1784" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1784" bodyend="1786"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a3358bb66320d1f729c373dc6b263f3a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float2</type>
        <definition>__device__ __host__ float2 clamp</definition>
        <argsstring>(float2 v, float2 a, float2 b)</argsstring>
        <name>clamp</name>
        <param>
          <type>float2</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1791" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1791" bodyend="1793"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a7899cceba82589cf107c88f733db3528" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float3</type>
        <definition>__device__ __host__ float3 clamp</definition>
        <argsstring>(float3 v, float a, float b)</argsstring>
        <name>clamp</name>
        <param>
          <type>float3</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1798" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1798" bodyend="1800"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a8ae5a188faba8fab77dacf63dc979b47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float3</type>
        <definition>__device__ __host__ float3 clamp</definition>
        <argsstring>(float3 v, float3 a, float3 b)</argsstring>
        <name>clamp</name>
        <param>
          <type>float3</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1805" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1805" bodyend="1807"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a3f5286af2ed3b64cc71c61985098fad8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float4</type>
        <definition>__device__ __host__ float4 clamp</definition>
        <argsstring>(float4 v, float a, float b)</argsstring>
        <name>clamp</name>
        <param>
          <type>float4</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1812" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1812" bodyend="1814"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aba26c2414d4ea6e5eb528a22a62afe6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float4</type>
        <definition>__device__ __host__ float4 clamp</definition>
        <argsstring>(float4 v, float4 a, float4 b)</argsstring>
        <name>clamp</name>
        <param>
          <type>float4</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1819" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1819" bodyend="1822"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ad1f08ef2aabcda2e2aca45d40fbc3397" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ int2</type>
        <definition>__device__ __host__ int2 clamp</definition>
        <argsstring>(int2 v, int a, int b)</argsstring>
        <name>clamp</name>
        <param>
          <type>int2</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1827" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1827" bodyend="1829"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a1ae68f45cd0e3e3446ad3b87b50862c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ int2</type>
        <definition>__device__ __host__ int2 clamp</definition>
        <argsstring>(int2 v, int2 a, int2 b)</argsstring>
        <name>clamp</name>
        <param>
          <type>int2</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1834" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1834" bodyend="1836"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2ad0c85491bef8c0028ddaa95c992912" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ int3</type>
        <definition>__device__ __host__ int3 clamp</definition>
        <argsstring>(int3 v, int a, int b)</argsstring>
        <name>clamp</name>
        <param>
          <type>int3</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1841" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1841" bodyend="1843"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a6cfba17e55ca97509c5b3dcef48a31fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ int3</type>
        <definition>__device__ __host__ int3 clamp</definition>
        <argsstring>(int3 v, int3 a, int3 b)</argsstring>
        <name>clamp</name>
        <param>
          <type>int3</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1848" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1848" bodyend="1850"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa3491b79aaeafdc9e3d7f087aa6ae9ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ int4</type>
        <definition>__device__ __host__ int4 clamp</definition>
        <argsstring>(int4 v, int a, int b)</argsstring>
        <name>clamp</name>
        <param>
          <type>int4</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1855" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1855" bodyend="1857"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afaec4cd721bf6372eb70a2676cf2b484" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ int4</type>
        <definition>__device__ __host__ int4 clamp</definition>
        <argsstring>(int4 v, int4 a, int4 b)</argsstring>
        <name>clamp</name>
        <param>
          <type>int4</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1862" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1862" bodyend="1865"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a138484df38165472bb41682c66484b7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ uint2</type>
        <definition>__device__ __host__ uint2 clamp</definition>
        <argsstring>(uint2 v, uint a, uint b)</argsstring>
        <name>clamp</name>
        <param>
          <type>uint2</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1870" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1870" bodyend="1872"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa78b50210a589c1af94f367fc5e9b7cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ uint2</type>
        <definition>__device__ __host__ uint2 clamp</definition>
        <argsstring>(uint2 v, uint2 a, uint2 b)</argsstring>
        <name>clamp</name>
        <param>
          <type>uint2</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1877" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1877" bodyend="1879"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aadd5fb93f5da74428d05fa97d5546129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ uint3</type>
        <definition>__device__ __host__ uint3 clamp</definition>
        <argsstring>(uint3 v, uint a, uint b)</argsstring>
        <name>clamp</name>
        <param>
          <type>uint3</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1884" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1884" bodyend="1886"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ab613d49c0404576007e0b149607a046a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ uint3</type>
        <definition>__device__ __host__ uint3 clamp</definition>
        <argsstring>(uint3 v, uint3 a, uint3 b)</argsstring>
        <name>clamp</name>
        <param>
          <type>uint3</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1891" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1891" bodyend="1893"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0ad021601699c2ce7896f811e8a6549f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ uint4</type>
        <definition>__device__ __host__ uint4 clamp</definition>
        <argsstring>(uint4 v, uint a, uint b)</argsstring>
        <name>clamp</name>
        <param>
          <type>uint4</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1898" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1898" bodyend="1900"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ae7ec59161a1834bfdd2149b94cfb2ce9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ uint4</type>
        <definition>__device__ __host__ uint4 clamp</definition>
        <argsstring>(uint4 v, uint4 a, uint4 b)</argsstring>
        <name>clamp</name>
        <param>
          <type>uint4</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1905" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1905" bodyend="1908"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float</type>
        <definition>__host__ __device__ float dot</definition>
        <argsstring>(float2 a, float2 b)</argsstring>
        <name>dot</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1917" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1917" bodyend="1919"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa9cdc9f9c05b4fbdc7bb18b325de7e9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float</type>
        <definition>__host__ __device__ float dot</definition>
        <argsstring>(float3 a, float3 b)</argsstring>
        <name>dot</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1924" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1924" bodyend="1926"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0e2579b86f636edba4ea1b36484ffb4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float</type>
        <definition>__host__ __device__ float dot</definition>
        <argsstring>(float4 a, float4 b)</argsstring>
        <name>dot</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1931" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1931" bodyend="1933"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a9a383c4a8a5548868b33c994702e5655" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int</type>
        <definition>__host__ __device__ int dot</definition>
        <argsstring>(int2 a, int2 b)</argsstring>
        <name>dot</name>
        <param>
          <type>int2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1937" column="5" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1937" bodyend="1940"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a55c003cc1dcaefb99143c01198ee38db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int</type>
        <definition>__host__ __device__ int dot</definition>
        <argsstring>(int3 a, int3 b)</argsstring>
        <name>dot</name>
        <param>
          <type>int3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1944" column="5" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1944" bodyend="1947"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a81dd5802470fb915ca1d9bf7a107b1e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int</type>
        <definition>__host__ __device__ int dot</definition>
        <argsstring>(int4 a, int4 b)</argsstring>
        <name>dot</name>
        <param>
          <type>int4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1951" column="5" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1951" bodyend="1954"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a289fee22af9fcc39b6916225dbf215c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ <ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>__host__ __device__ uint dot</definition>
        <argsstring>(uint2 a, uint2 b)</argsstring>
        <name>dot</name>
        <param>
          <type>uint2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1959" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1959" bodyend="1961"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a0f4a723da388b8fe38ecfdf042934c8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ <ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>__host__ __device__ uint dot</definition>
        <argsstring>(uint3 a, uint3 b)</argsstring>
        <name>dot</name>
        <param>
          <type>uint3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1966" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1966" bodyend="1968"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af381ed485d00cebfc4c52608646a7474" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ <ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>__host__ __device__ uint dot</definition>
        <argsstring>(uint4 a, uint4 b)</argsstring>
        <name>dot</name>
        <param>
          <type>uint4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1973" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1973" bodyend="1975"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2fcd5057894d92219f3d8e11e6ace2ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float</type>
        <definition>__host__ __device__ float length</definition>
        <argsstring>(float2 v)</argsstring>
        <name>length</name>
        <param>
          <type>float2</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1984" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1984" bodyend="1986"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa0ee40a3fc6118e9711f98a5087126b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float</type>
        <definition>__host__ __device__ float length</definition>
        <argsstring>(float3 v)</argsstring>
        <name>length</name>
        <param>
          <type>float3</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1991" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1991" bodyend="1993"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ad0e18f22f0bd104515d650409b5746bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float</type>
        <definition>__host__ __device__ float length</definition>
        <argsstring>(float4 v)</argsstring>
        <name>length</name>
        <param>
          <type>float4</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="1998" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="1998" bodyend="2000"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a03895877c88d7a470fbd49f69742033a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 normalize</definition>
        <argsstring>(float2 v)</argsstring>
        <name>normalize</name>
        <param>
          <type>float2</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2009" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2009" bodyend="2012"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af5ecbee670bc52b15d310a5affbb4bfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 normalize</definition>
        <argsstring>(float3 v)</argsstring>
        <name>normalize</name>
        <param>
          <type>float3</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2017" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2017" bodyend="2020"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac6906e8e2670d8355f05f96d121fe451" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 normalize</definition>
        <argsstring>(float4 v)</argsstring>
        <name>normalize</name>
        <param>
          <type>float4</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2025" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2025" bodyend="2028"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 floorf</definition>
        <argsstring>(float2 v)</argsstring>
        <name>floorf</name>
        <param>
          <type>float2</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2037" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2037" bodyend="2039"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a549835c169f172cf838f65d81f958421" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 floorf</definition>
        <argsstring>(float3 v)</argsstring>
        <name>floorf</name>
        <param>
          <type>float3</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2044" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2044" bodyend="2046"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a1bd42b705a0de4def6b605ef2699b9ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 floorf</definition>
        <argsstring>(float4 v)</argsstring>
        <name>floorf</name>
        <param>
          <type>float4</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2051" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2051" bodyend="2053"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float</type>
        <definition>__host__ __device__ float fracf</definition>
        <argsstring>(float v)</argsstring>
        <name>fracf</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2062" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2062" bodyend="2064"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ac26eb0c8f1fa7b38ea491354d953453b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 fracf</definition>
        <argsstring>(float2 v)</argsstring>
        <name>fracf</name>
        <param>
          <type>float2</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2069" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2069" bodyend="2071"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a87222927d3e8a5bf864b90ebd23e4531" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 fracf</definition>
        <argsstring>(float3 v)</argsstring>
        <name>fracf</name>
        <param>
          <type>float3</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2076" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2076" bodyend="2078"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aad5e4d519cb28ab64e0c38bdb786f729" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 fracf</definition>
        <argsstring>(float4 v)</argsstring>
        <name>fracf</name>
        <param>
          <type>float4</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2083" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2083" bodyend="2085"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 fmodf</definition>
        <argsstring>(float2 a, float2 b)</argsstring>
        <name>fmodf</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2094" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2094" bodyend="2096"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a6faff26c220db9b3a0e6288ee06ec521" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 fmodf</definition>
        <argsstring>(float3 a, float3 b)</argsstring>
        <name>fmodf</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2101" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2101" bodyend="2103"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a56aadc267ba639864d79188aa781423f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 fmodf</definition>
        <argsstring>(float4 a, float4 b)</argsstring>
        <name>fmodf</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2108" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2108" bodyend="2110"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float2</type>
        <definition>__host__ __device__ float2 fabs</definition>
        <argsstring>(float2 v)</argsstring>
        <name>fabs</name>
        <param>
          <type>float2</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2119" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2119" bodyend="2121"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a62721d5f250db151ae718f799c9a3dd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 fabs</definition>
        <argsstring>(float3 v)</argsstring>
        <name>fabs</name>
        <param>
          <type>float3</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2126" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2126" bodyend="2128"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1aa9ee264473011054a33354d0045161ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float4</type>
        <definition>__host__ __device__ float4 fabs</definition>
        <argsstring>(float4 v)</argsstring>
        <name>fabs</name>
        <param>
          <type>float4</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2133" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2133" bodyend="2135"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int2</type>
        <definition>__host__ __device__ int2 abs</definition>
        <argsstring>(int2 v)</argsstring>
        <name>abs</name>
        <param>
          <type>int2</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2140" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2140" bodyend="2142"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1afe553b3ddd067e12861af3967b19f1cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int3</type>
        <definition>__host__ __device__ int3 abs</definition>
        <argsstring>(int3 v)</argsstring>
        <name>abs</name>
        <param>
          <type>int3</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2147" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2147" bodyend="2149"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a7655a657941c02d7cc078ab3ec252ca0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ int4</type>
        <definition>__host__ __device__ int4 abs</definition>
        <argsstring>(int4 v)</argsstring>
        <name>abs</name>
        <param>
          <type>int4</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2154" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2154" bodyend="2156"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1af41fd3e3e7014942f20fb620588803d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 reflect</definition>
        <argsstring>(float3 i, float3 n)</argsstring>
        <name>reflect</name>
        <param>
          <type>float3</type>
          <declname>i</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2167" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2167" bodyend="2169"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a2e4be24f36bc31a9d0b35540aaa5fb71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ float3</type>
        <definition>__host__ __device__ float3 cross</definition>
        <argsstring>(float3 a, float3 b)</argsstring>
        <name>cross</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2178" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2178" bodyend="2180"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a3c69cf69820ec337d4b49ee5df17058c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float</type>
        <definition>__device__ __host__ float smoothstep</definition>
        <argsstring>(float a, float b, float x)</argsstring>
        <name>smoothstep</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2192" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2192" bodyend="2195"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a49db91bc8d6d57f347ca87dc1c70e2de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float2</type>
        <definition>__device__ __host__ float2 smoothstep</definition>
        <argsstring>(float2 a, float2 b, float2 x)</argsstring>
        <name>smoothstep</name>
        <param>
          <type>float2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float2</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2200" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2200" bodyend="2203"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a803dfc03ce7a72b312ea14cd3d854e01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float3</type>
        <definition>__device__ __host__ float3 smoothstep</definition>
        <argsstring>(float3 a, float3 b, float3 x)</argsstring>
        <name>smoothstep</name>
        <param>
          <type>float3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float3</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2208" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2208" bodyend="2211"/>
      </memberdef>
      <memberdef kind="function" id="helper__math_8h_1a20180981da5c0ca777b200d5a68b5952" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ __host__ float4</type>
        <definition>__device__ __host__ float4 smoothstep</definition>
        <argsstring>(float4 a, float4 b, float4 x)</argsstring>
        <name>smoothstep</name>
        <param>
          <type>float4</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float4</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/cuda/helper_math.h" line="2216" column="3" bodyfile="librapid/include/librapid/cuda/helper_math.h" bodystart="2216" bodyend="2219"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>(c)<sp/>2019,<sp/>NVIDIA<sp/>CORPORATION.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>NVIDIA<sp/>CORPORATION<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>implements<sp/>common<sp/>mathematical<sp/>operations<sp/>on<sp/>vector<sp/>types</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>(float3,<sp/>float4<sp/>etc.)<sp/>since<sp/>these<sp/>are<sp/>not<sp/>provided<sp/>as<sp/>standard<sp/>by<sp/>CUDA.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>syntax<sp/>is<sp/>modeled<sp/>on<sp/>the<sp/>Cg<sp/>standard<sp/>library.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Helper<sp/>library<sp/>includes</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Thanks<sp/>to<sp/>Linh<sp/>Hah<sp/>for<sp/>additions<sp/>and<sp/>fixes.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HELPER_MATH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HELPER_MATH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cuda_runtime.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="helper__math_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EXIT_WAIVED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="helper__math_8h_1ad20838a18f49298dae4d0ee29a0bb7a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>EXIT_WAIVED<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__CUDACC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="comment">//<sp/>host<sp/>implementations<sp/>of<sp/>CUDA<sp/>functions</highlight></codeline>
<codeline lineno="59"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&lt;<sp/>b<sp/>?<sp/>a<sp/>:<sp/>b;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&gt;<sp/>b<sp/>?<sp/>a<sp/>:<sp/>b;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&gt;<sp/>b<sp/>?<sp/>a<sp/>:<sp/>b;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>&lt;<sp/>b<sp/>?<sp/>a<sp/>:<sp/>b;<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="helper__math_8h_1a03dd2c47cd23a00d16e39bfb75a2e6fe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a03dd2c47cd23a00d16e39bfb75a2e6fe" kindref="member">rsqrtf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0f<sp/>/<sp/>sqrtf(x);<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="comment">//<sp/>constructors</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="79" refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(s,<sp/>s);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="86" refid="helper__math_8h_1a1823a61ec2e6e1f3aa9633986d97e53a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(float3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(a.x,<sp/>a.y);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="93" refid="helper__math_8h_1a25aa9f2068c8a5086cb6e4d81e881497" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(int2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.y));</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="100" refid="helper__math_8h_1a931119b28bbeb119817cd0128f422a08" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(uint2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.y));</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="107" refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(s,<sp/>s);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="114" refid="helper__math_8h_1ae61756ff3dc1ab198bee68dabd89b2ec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(int3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(a.x,<sp/>a.y);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="121" refid="helper__math_8h_1ab168ef295a81a4e7aa2832400b567984" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(uint2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.y));</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="128" refid="helper__math_8h_1a50585f962a65c911776c25c10c24d5d6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(float2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.y));</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="135" refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(s,<sp/>s);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="142" refid="helper__math_8h_1abbc2000421b607c0fffb193de779957b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(uint3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(a.x,<sp/>a.y);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="149" refid="helper__math_8h_1a3094c2b3e8e5fbddb78523e9e3f852fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(int2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>(a.x),<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>(a.y));</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="156" refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(s,<sp/>s,<sp/>s);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="163" refid="helper__math_8h_1ab9370c14e8795ec39775092dae97f7e1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(float2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x,<sp/>a.y,<sp/>0.0f);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="170" refid="helper__math_8h_1afbf5b34e3b157d9c0e0a72a21f684619" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(float2<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x,<sp/>a.y,<sp/>s);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="177" refid="helper__math_8h_1a16eea6410ca5c145348eeb5586f75286" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(float4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x,<sp/>a.y,<sp/>a.z);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="184" refid="helper__math_8h_1a129b8aec63310cd59348ac83ca2e17fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(int3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.y),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.z));</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="191" refid="helper__math_8h_1a4bee55da9c55a6ae787fca2d7ac67213" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(uint3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.y),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.z));</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="198" refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(s,<sp/>s,<sp/>s);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="205" refid="helper__math_8h_1afcf55d96866f5e6d69793bc86060fdfe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(int2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(a.x,<sp/>a.y,<sp/>0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="212" refid="helper__math_8h_1a8254230af6ef58254ad19e744b24760e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(int2<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(a.x,<sp/>a.y,<sp/>s);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="219" refid="helper__math_8h_1a51515ac4cb5c2ba899cce09ee31b3764" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(uint3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.y),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.z));</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="226" refid="helper__math_8h_1ac3a5d29d27669d59fea890dbaac58338" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(float3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.y),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.z));</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="233" refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(s,<sp/>s,<sp/>s);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="240" refid="helper__math_8h_1a5e8423baf776bebe1a2dbe99d5abcb53" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(uint2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(a.x,<sp/>a.y,<sp/>0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="247" refid="helper__math_8h_1a1c822e665bf1b79cb60dc7aed45365a7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(uint2<sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(a.x,<sp/>a.y,<sp/>s);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="254" refid="helper__math_8h_1ab7c3d47690fa70bc7c402f3c51ca09e6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(uint4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(a.x,<sp/>a.y,<sp/>a.z);</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="261" refid="helper__math_8h_1a206cc78a8c176ee16f2c128ce9cb6d74" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(int3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>(a.x),<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>(a.y),<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>(a.z));</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="268" refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(s,<sp/>s,<sp/>s,<sp/>s);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="275" refid="helper__math_8h_1a4bd54a2c024a4690628ca6765b58c27f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(float3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(a.x,<sp/>a.y,<sp/>a.z,<sp/>0.0f);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="282" refid="helper__math_8h_1adbd30073dc4eab10e0f37063f355b4d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(float3<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(a.x,<sp/>a.y,<sp/>a.z,<sp/>w);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="289" refid="helper__math_8h_1a90cdcb095eafa84ef078bdc8d7a58588" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(int4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.y),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.z),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.w));</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="296" refid="helper__math_8h_1ad4fbc0d36eff701191063233fa7643b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(uint4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.y),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.z),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(a.w));</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="303" refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(s,<sp/>s,<sp/>s,<sp/>s);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="310" refid="helper__math_8h_1a2374cd64552e8716f8e4f5194484fd2d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(int3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(a.x,<sp/>a.y,<sp/>a.z,<sp/>0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="317" refid="helper__math_8h_1a7299fe77f53a27dee58f08b0401a035a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(int3<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(a.x,<sp/>a.y,<sp/>a.z,<sp/>w);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="324" refid="helper__math_8h_1a1a625b9f03f45a4b09648cb79e0270bf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(uint4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.y),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.z),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.w));</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="331" refid="helper__math_8h_1a0230f6765dc22238288c734a6afd53ed" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(float4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.x),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.y),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.z),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.w));</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="338" refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(s,<sp/>s,<sp/>s,<sp/>s);</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="345" refid="helper__math_8h_1a622e6d9f0fde597549dae79b03e6c7d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(uint3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(a.x,<sp/>a.y,<sp/>a.z,<sp/>0);</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="352" refid="helper__math_8h_1a55216df3e4e30b42ddd5af2e6cae02a6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(uint3<sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(a.x,<sp/>a.y,<sp/>a.z,<sp/>w);</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="359" refid="helper__math_8h_1aaea5bdeca43377b1ca682d020d6ed583" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(int4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>(a.x),<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>(a.y),<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>(a.z),<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>(a.w));</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="comment">//<sp/>negate</highlight></codeline>
<codeline lineno="366"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="370" refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(float2<sp/>&amp;a)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(-a.x,<sp/>-a.y);</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="377" refid="helper__math_8h_1aa2a017587dafe51d6a2aa0ac393d4cea" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(int2<sp/>&amp;a)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(-a.x,<sp/>-a.y);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="384" refid="helper__math_8h_1a13c460bf0477142ba40606d7f4d20a90" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(float3<sp/>&amp;a)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(-a.x,<sp/>-a.y,<sp/>-a.z);</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="391" refid="helper__math_8h_1a26c49763a45d00cd11d802e00c52ae30" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(int3<sp/>&amp;a)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(-a.x,<sp/>-a.y,<sp/>-a.z);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="398" refid="helper__math_8h_1aae7e93cd36d263560cf8535af5212d4e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(float4<sp/>&amp;a)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(-a.x,<sp/>-a.y,<sp/>-a.z,<sp/>-a.w);</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="405" refid="helper__math_8h_1afd25a9db28fe7138f38b13c2888303b2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(int4<sp/>&amp;a)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(-a.x,<sp/>-a.y,<sp/>-a.z,<sp/>-a.w);</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="comment">//<sp/>addition</highlight></codeline>
<codeline lineno="412"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="416" refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(float2<sp/>a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(a.x<sp/>+<sp/>b.x,<sp/>a.y<sp/>+<sp/>b.y);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(float2<sp/>&amp;a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b.x;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b.y;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="431" refid="helper__math_8h_1a45efa1f9d0f6e3a6f4959a8b414332b2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(float2<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="438" refid="helper__math_8h_1af21e0f9591dbec80b3a4b778741fdd1d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/>float2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="helper__math_8h_1a1f9d6e667f300092ac62f9b26dfcfd4b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(float2<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="453" refid="helper__math_8h_1ac2c1c606d303052b7d6ac2a0a8d3a359" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(int2<sp/>a,<sp/>int2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(a.x<sp/>+<sp/>b.x,<sp/>a.y<sp/>+<sp/>b.y);</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="helper__math_8h_1a9e4431a46cf667f33f0448791ed5467c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(int2<sp/>&amp;a,<sp/>int2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b.x;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b.y;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="468" refid="helper__math_8h_1ab8bfe46384be930c2b3b8485b6c63d3d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(int2<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="475" refid="helper__math_8h_1aaefd6f9bff787b2e5fa5016ce48274c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>int2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="helper__math_8h_1a049e90718d67a941c14211231346fcc9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(int2<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="490" refid="helper__math_8h_1afac48af87e5962ea3d6417d181472ffb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(uint2<sp/>a,<sp/>uint2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(a.x<sp/>+<sp/>b.x,<sp/>a.y<sp/>+<sp/>b.y);</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="helper__math_8h_1aec6758ea15ded195757c534be014f6f6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(uint2<sp/>&amp;a,<sp/>uint2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b.x;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b.y;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="505" refid="helper__math_8h_1a215adf938ae85de85f1d4ac1a01aca97" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(uint2<sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="512" refid="helper__math_8h_1a9748d49986dbd69fb732b81f4fa93aad" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b,<sp/>uint2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="helper__math_8h_1adfd4133b456ffc42bc85af9fb2e8a4a2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(uint2<sp/>&amp;a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="527" refid="helper__math_8h_1a2d6165328ff6cc4542f56a815ab992a6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(float3<sp/>a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x<sp/>+<sp/>b.x,<sp/>a.y<sp/>+<sp/>b.y,<sp/>a.z<sp/>+<sp/>b.z);</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="helper__math_8h_1abc9bcbeeb5a34af30746f5b0d186d050" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(float3<sp/>&amp;a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b.x;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b.y;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b.z;</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="543" refid="helper__math_8h_1a6c34592ef6bbc2da5a2832fa35bd9a8c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(float3<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="helper__math_8h_1ac071c7d8bfa65de4ff1aa6a274e4db88" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(float3<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="559" refid="helper__math_8h_1ade23035ad90bdaeb84fef16038074110" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(int3<sp/>a,<sp/>int3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(a.x<sp/>+<sp/>b.x,<sp/>a.y<sp/>+<sp/>b.y,<sp/>a.z<sp/>+<sp/>b.z);</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="helper__math_8h_1a5c0f140fc8c3250b61805836d0488bd6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(int3<sp/>&amp;a,<sp/>int3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b.x;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b.y;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b.z;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="575" refid="helper__math_8h_1a4353229a68fe4399a971683a4ef6d0f0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(int3<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="helper__math_8h_1a0d35e08d590897886fbcb1d79b44d620" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(int3<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="591" refid="helper__math_8h_1adfe110726dcfa14c67b075dd14b5a703" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(uint3<sp/>a,<sp/>uint3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(a.x<sp/>+<sp/>b.x,<sp/>a.y<sp/>+<sp/>b.y,<sp/>a.z<sp/>+<sp/>b.z);</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="helper__math_8h_1ababf7d386e7618694f5df29fe03b422c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(uint3<sp/>&amp;a,<sp/>uint3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b.x;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b.y;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b.z;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="607" refid="helper__math_8h_1a76083831bcb12adb3afda03ed079a055" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(uint3<sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="helper__math_8h_1a2b9aef0679cb047130392334ee636baf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(uint3<sp/>&amp;a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="623" refid="helper__math_8h_1a788b4d03c81205bf0567519a2d586478" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>int3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="630" refid="helper__math_8h_1a58aa5970ff73f2d7f13bc0b49a5e6070" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b,<sp/>uint3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="637" refid="helper__math_8h_1ad754172978b703f49aed29450e7c6580" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/>float3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="644" refid="helper__math_8h_1a55e9b703f5296a9d8b12e87d64975d43" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(float4<sp/>a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(a.x<sp/>+<sp/>b.x,<sp/>a.y<sp/>+<sp/>b.y,<sp/>a.z<sp/>+<sp/>b.z,<sp/>a.w<sp/>+<sp/>b.w);</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651" refid="helper__math_8h_1adad7f53eab267caf355ffdaf717f4ad5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(float4<sp/>&amp;a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b.x;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b.y;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b.z;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>+=<sp/>b.w;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="661" refid="helper__math_8h_1a75b5ab509cb131570f0bb07f8075f43a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(float4<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b,<sp/>a.w<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="668" refid="helper__math_8h_1a41696e13215c5c8ed2375fb707ea74dc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/>float4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b,<sp/>a.w<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="helper__math_8h_1a3285647d09ea06320d1126e7a45903ed" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(float4<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="685" refid="helper__math_8h_1a21fc85d43b00fdaffa214fbb030293e4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(int4<sp/>a,<sp/>int4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(a.x<sp/>+<sp/>b.x,<sp/>a.y<sp/>+<sp/>b.y,<sp/>a.z<sp/>+<sp/>b.z,<sp/>a.w<sp/>+<sp/>b.w);</highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="helper__math_8h_1a7d724f81f355ab93b51a62b39d70fada" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(int4<sp/>&amp;a,<sp/>int4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b.x;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b.y;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b.z;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>+=<sp/>b.w;</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="702" refid="helper__math_8h_1a56f46f44c69989c868081bfa07a5d4eb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(int4<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b,<sp/>a.w<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="709" refid="helper__math_8h_1a84292bb1bdb8fa70961b76f9e4563fce" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>int4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b,<sp/>a.w<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="helper__math_8h_1a087d4fa0a702c7e6772a4ad7f2df9906" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(int4<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="726" refid="helper__math_8h_1abe5884849d9027d17f8db14edea8a662" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(uint4<sp/>a,<sp/>uint4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(a.x<sp/>+<sp/>b.x,<sp/>a.y<sp/>+<sp/>b.y,<sp/>a.z<sp/>+<sp/>b.z,<sp/>a.w<sp/>+<sp/>b.w);</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="helper__math_8h_1a3d39a0f12765010f2a209d154971de75" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(uint4<sp/>&amp;a,<sp/>uint4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b.x;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b.y;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b.z;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>+=<sp/>b.w;</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="743" refid="helper__math_8h_1a3d75fa4adcda7d8eb361bbd7a75d8c11" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(uint4<sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b,<sp/>a.w<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="750" refid="helper__math_8h_1aeb1a164a301f3ffc4befe5901826eadd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aabe4a4caf16da937cee9a5e2d2e6d123" kindref="member">operator+</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b,<sp/>uint4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(a.x<sp/>+<sp/>b,<sp/>a.y<sp/>+<sp/>b,<sp/>a.z<sp/>+<sp/>b,<sp/>a.w<sp/>+<sp/>b);</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="helper__math_8h_1a9fb362dfe6bcec4bcf1a59d8c41aa0bc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af1dd5e91cb97f00798f24ebd7cb4633b" kindref="member">operator+=</ref>(uint4<sp/>&amp;a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="comment">//<sp/>subtract</highlight></codeline>
<codeline lineno="767"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="771" refid="helper__math_8h_1a6cc46f5cc50bd5f0cff7a0fd69fee5db" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(float2<sp/>a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(a.x<sp/>-<sp/>b.x,<sp/>a.y<sp/>-<sp/>b.y);</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778" refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(float2<sp/>&amp;a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b.x;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b.y;</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="786" refid="helper__math_8h_1aabd11d734658e0ebf5de5740970bf82d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(float2<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(a.x<sp/>-<sp/>b,<sp/>a.y<sp/>-<sp/>b);</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="793" refid="helper__math_8h_1af9022f4af2518d79f08120775476604a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/>float2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(b<sp/>-<sp/>a.x,<sp/>b<sp/>-<sp/>a.y);</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800" refid="helper__math_8h_1a5c92bad3b3579fb468cf417278834d17" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(float2<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="808" refid="helper__math_8h_1abb3a3e03a44492443c19dcb4154da9c1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(int2<sp/>a,<sp/>int2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(a.x<sp/>-<sp/>b.x,<sp/>a.y<sp/>-<sp/>b.y);</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815" refid="helper__math_8h_1aea88625b90f1e26e3dd4ef4a975ce294" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(int2<sp/>&amp;a,<sp/>int2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b.x;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b.y;</highlight></codeline>
<codeline lineno="818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="823" refid="helper__math_8h_1a4f87f263c55ecf10afb677cbc005f781" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(int2<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(a.x<sp/>-<sp/>b,<sp/>a.y<sp/>-<sp/>b);</highlight></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="830" refid="helper__math_8h_1a3728a7d7d2b281b55d3c788a539dfe76" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>int2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(b<sp/>-<sp/>a.x,<sp/>b<sp/>-<sp/>a.y);</highlight></codeline>
<codeline lineno="832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837" refid="helper__math_8h_1aeffe196c72b8678f21bef222c800c481" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(int2<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="845" refid="helper__math_8h_1a5eff670232c718087a9066549273f601" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(uint2<sp/>a,<sp/>uint2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(a.x<sp/>-<sp/>b.x,<sp/>a.y<sp/>-<sp/>b.y);</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852" refid="helper__math_8h_1a0ae38d598e3e6f69481ecbc2eaa48569" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(uint2<sp/>&amp;a,<sp/>uint2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b.x;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b.y;</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="860" refid="helper__math_8h_1a86fdb2dc9e19c3bfa073254419ae0a0b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(uint2<sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(a.x<sp/>-<sp/>b,<sp/>a.y<sp/>-<sp/>b);</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="867" refid="helper__math_8h_1a6c6dace1a42a8f4573b3438e1bfb2cb4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b,<sp/>uint2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(b<sp/>-<sp/>a.x,<sp/>b<sp/>-<sp/>a.y);</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874" refid="helper__math_8h_1ae9f6f783e478f70750c82d864641b47d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(uint2<sp/>&amp;a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="882" refid="helper__math_8h_1a2e6abc29e0daaf87bb76886e3927689a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(float3<sp/>a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x<sp/>-<sp/>b.x,<sp/>a.y<sp/>-<sp/>b.y,<sp/>a.z<sp/>-<sp/>b.z);</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889" refid="helper__math_8h_1ad15076d1a17ef0c9acef7452a6969614" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(float3<sp/>&amp;a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b.x;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b.y;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b.z;</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="898" refid="helper__math_8h_1aa540cfdc48ffab4088d9294b462a3e76" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(float3<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x<sp/>-<sp/>b,<sp/>a.y<sp/>-<sp/>b,<sp/>a.z<sp/>-<sp/>b);</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="905" refid="helper__math_8h_1a6daa29e43c17c328380cd128983439c7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/>float3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(b<sp/>-<sp/>a.x,<sp/>b<sp/>-<sp/>a.y,<sp/>b<sp/>-<sp/>a.z);</highlight></codeline>
<codeline lineno="907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912" refid="helper__math_8h_1af9ba13e9aa84ad750a2658951ed7e435" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(float3<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="921" refid="helper__math_8h_1a43abb92d48055eaecca3f168410d5625" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(int3<sp/>a,<sp/>int3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(a.x<sp/>-<sp/>b.x,<sp/>a.y<sp/>-<sp/>b.y,<sp/>a.z<sp/>-<sp/>b.z);</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="helper__math_8h_1a177ec0c353e7120c0276254a128e4cb9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(int3<sp/>&amp;a,<sp/>int3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b.x;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b.y;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b.z;</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="937" refid="helper__math_8h_1a01579d935871f027c412fa6376e254a8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(int3<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(a.x<sp/>-<sp/>b,<sp/>a.y<sp/>-<sp/>b,<sp/>a.z<sp/>-<sp/>b);</highlight></codeline>
<codeline lineno="939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="944" refid="helper__math_8h_1abeeac4a47e9ab5116536a334bf23cd81" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>int3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(b<sp/>-<sp/>a.x,<sp/>b<sp/>-<sp/>a.y,<sp/>b<sp/>-<sp/>a.z);</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951" refid="helper__math_8h_1a0e054427ef70473a892d33d243d947f5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(int3<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="960" refid="helper__math_8h_1a526d1e2ebbb39ddc90f207d989472fb3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(uint3<sp/>a,<sp/>uint3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(a.x<sp/>-<sp/>b.x,<sp/>a.y<sp/>-<sp/>b.y,<sp/>a.z<sp/>-<sp/>b.z);</highlight></codeline>
<codeline lineno="962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967" refid="helper__math_8h_1ac7d8dcfe50c16fe9a52163bcf24603c7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(uint3<sp/>&amp;a,<sp/>uint3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b.x;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b.y;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b.z;</highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="976" refid="helper__math_8h_1a9718b3ce657f79598000b28f67dad03c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(uint3<sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(a.x<sp/>-<sp/>b,<sp/>a.y<sp/>-<sp/>b,<sp/>a.z<sp/>-<sp/>b);</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="983" refid="helper__math_8h_1a01256999d918c8b8c729b7add2ec0376" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b,<sp/>uint3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(b<sp/>-<sp/>a.x,<sp/>b<sp/>-<sp/>a.y,<sp/>b<sp/>-<sp/>a.z);</highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990" refid="helper__math_8h_1afd8ed48e8cbed4760ee8cf1f02426c30" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(uint3<sp/>&amp;a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="999" refid="helper__math_8h_1afe5fa03c9ef3d209ae6b891ca28eb6d0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(float4<sp/>a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(a.x<sp/>-<sp/>b.x,<sp/>a.y<sp/>-<sp/>b.y,<sp/>a.z<sp/>-<sp/>b.z,<sp/>a.w<sp/>-<sp/>b.w);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006" refid="helper__math_8h_1a12e8cbc1bebe88b25dde93e7cb63ab31" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(float4<sp/>&amp;a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b.x;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b.y;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b.z;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>-=<sp/>b.w;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1016" refid="helper__math_8h_1aac50d350a85a37edc197928c3cccc657" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(float4<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(a.x<sp/>-<sp/>b,<sp/>a.y<sp/>-<sp/>b,<sp/>a.z<sp/>-<sp/>b,<sp/>a.w<sp/>-<sp/>b);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023" refid="helper__math_8h_1a2ffc7077fc686a759d2b4bf241dcf688" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(float4<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="1033" refid="helper__math_8h_1a1fb91e3f5f594852d1df0bf7eba6a127" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(int4<sp/>a,<sp/>int4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(a.x<sp/>-<sp/>b.x,<sp/>a.y<sp/>-<sp/>b.y,<sp/>a.z<sp/>-<sp/>b.z,<sp/>a.w<sp/>-<sp/>b.w);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040" refid="helper__math_8h_1af8c6a8b21f3ee4c04c230c22fdd454ca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(int4<sp/>&amp;a,<sp/>int4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b.x;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b.y;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b.z;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>-=<sp/>b.w;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="1050" refid="helper__math_8h_1a1195cc83f476b0da17cef4fe9a2c00bd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(int4<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(a.x<sp/>-<sp/>b,<sp/>a.y<sp/>-<sp/>b,<sp/>a.z<sp/>-<sp/>b,<sp/>a.w<sp/>-<sp/>b);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="1057" refid="helper__math_8h_1a42ac63a20d3bb1779e068a3a742db311" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>int4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(b<sp/>-<sp/>a.x,<sp/>b<sp/>-<sp/>a.y,<sp/>b<sp/>-<sp/>a.z,<sp/>b<sp/>-<sp/>a.w);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064" refid="helper__math_8h_1abbfa490d644bf42e0859836c217ec1ee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(int4<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="1074" refid="helper__math_8h_1a0d2ec3b1d26384f29b2cdbc03cf7cd1f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(uint4<sp/>a,<sp/>uint4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(a.x<sp/>-<sp/>b.x,<sp/>a.y<sp/>-<sp/>b.y,<sp/>a.z<sp/>-<sp/>b.z,<sp/>a.w<sp/>-<sp/>b.w);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081" refid="helper__math_8h_1a1c6478f6899260f365f6fc106b318752" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(uint4<sp/>&amp;a,<sp/>uint4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b.x;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b.y;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b.z;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>-=<sp/>b.w;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="1091" refid="helper__math_8h_1ae2498413878fb3238e97c6fe89b30e8b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(uint4<sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(a.x<sp/>-<sp/>b,<sp/>a.y<sp/>-<sp/>b,<sp/>a.z<sp/>-<sp/>b,<sp/>a.w<sp/>-<sp/>b);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="1098" refid="helper__math_8h_1a1c2f5f7cb28afeb60339d4bec581db3a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a7bb7255dfcfbae1cd128711f6fd076fd" kindref="member">operator-</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b,<sp/>uint4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(b<sp/>-<sp/>a.x,<sp/>b<sp/>-<sp/>a.y,<sp/>b<sp/>-<sp/>a.z,<sp/>b<sp/>-<sp/>a.w);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105" refid="helper__math_8h_1a16adc69af375a6ce68996df7631690b8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3a8599ce4dc1c790b80ca2eb26048a2e" kindref="member">operator-=</ref>(uint4<sp/>&amp;a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>-=<sp/>b;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="comment">//<sp/>multiply</highlight></codeline>
<codeline lineno="1115"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="1119" refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(float2<sp/>a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(a.x<sp/>*<sp/>b.x,<sp/>a.y<sp/>*<sp/>b.y);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126" refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(float2<sp/>&amp;a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b.x;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b.y;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="1134" refid="helper__math_8h_1a0f2708666c88e53d856b34e979be20b2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(float2<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(a.x<sp/>*<sp/>b,<sp/>a.y<sp/>*<sp/>b);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="1141" refid="helper__math_8h_1a1ef2619ea80686bd7c7863809d288ba5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/>float2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(b<sp/>*<sp/>a.x,<sp/>b<sp/>*<sp/>a.y);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148" refid="helper__math_8h_1ae1d74155061d4d944088c98ee0298181" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(float2<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="1156" refid="helper__math_8h_1af87d56b7874c3bfec0de4c6fd8ae625e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(int2<sp/>a,<sp/>int2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(a.x<sp/>*<sp/>b.x,<sp/>a.y<sp/>*<sp/>b.y);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163" refid="helper__math_8h_1ab9bf48034bdbcb0427fb9dfcef87dee2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(int2<sp/>&amp;a,<sp/>int2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b.x;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b.y;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="1171" refid="helper__math_8h_1a953ef65975cb4a7988748760f2b2077b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(int2<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(a.x<sp/>*<sp/>b,<sp/>a.y<sp/>*<sp/>b);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="1178" refid="helper__math_8h_1a446049af45d0c7a0c108f731185a1c74" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>int2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(b<sp/>*<sp/>a.x,<sp/>b<sp/>*<sp/>a.y);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185" refid="helper__math_8h_1a57578141840e8ccefdfbd3182d4514c8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(int2<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="1193" refid="helper__math_8h_1ae340fa5e9807f9eca945fd9551b6f26c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(uint2<sp/>a,<sp/>uint2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(a.x<sp/>*<sp/>b.x,<sp/>a.y<sp/>*<sp/>b.y);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200" refid="helper__math_8h_1a04068e86ec46cf5212bc0343f878783f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(uint2<sp/>&amp;a,<sp/>uint2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b.x;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b.y;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="1208" refid="helper__math_8h_1a98df384c8f83292aad43b8f6ee13d0cf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(uint2<sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(a.x<sp/>*<sp/>b,<sp/>a.y<sp/>*<sp/>b);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="1215" refid="helper__math_8h_1aeac80f0d4f81164a6005394d25150ff0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b,<sp/>uint2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(b<sp/>*<sp/>a.x,<sp/>b<sp/>*<sp/>a.y);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222" refid="helper__math_8h_1ad887ba35d0532887c1fd4c7810a9a4d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(uint2<sp/>&amp;a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="1230" refid="helper__math_8h_1ad0d3c9c8703577ba6c9c688c882d402d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(float3<sp/>a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x<sp/>*<sp/>b.x,<sp/>a.y<sp/>*<sp/>b.y,<sp/>a.z<sp/>*<sp/>b.z);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237" refid="helper__math_8h_1a042f6ee4cc5408fe9ee2466c0248ab26" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(float3<sp/>&amp;a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b.x;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b.y;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b.z;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="1246" refid="helper__math_8h_1a8aef88d76c6caa64f8bb38b71d23811c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(float3<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x<sp/>*<sp/>b,<sp/>a.y<sp/>*<sp/>b,<sp/>a.z<sp/>*<sp/>b);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="1253" refid="helper__math_8h_1a54e26bce92f997cb715626fc58f8ab5d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/>float3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(b<sp/>*<sp/>a.x,<sp/>b<sp/>*<sp/>a.y,<sp/>b<sp/>*<sp/>a.z);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260" refid="helper__math_8h_1a6ce7f1475d8aab976a3e9aecf7bccd66" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(float3<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="1269" refid="helper__math_8h_1ae2395fa25fedaa9f7d54d253fd41e446" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(int3<sp/>a,<sp/>int3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(a.x<sp/>*<sp/>b.x,<sp/>a.y<sp/>*<sp/>b.y,<sp/>a.z<sp/>*<sp/>b.z);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276" refid="helper__math_8h_1a6b3a11de4915413b0b930a52a1e0011e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(int3<sp/>&amp;a,<sp/>int3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b.x;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b.y;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b.z;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="1285" refid="helper__math_8h_1a263b3db3bd2fecf9d57ff5c0076fee8c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(int3<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(a.x<sp/>*<sp/>b,<sp/>a.y<sp/>*<sp/>b,<sp/>a.z<sp/>*<sp/>b);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="1292" refid="helper__math_8h_1ac983d345616adca1535b8d434019b0ae" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>int3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(b<sp/>*<sp/>a.x,<sp/>b<sp/>*<sp/>a.y,<sp/>b<sp/>*<sp/>a.z);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299" refid="helper__math_8h_1a82fd655dafc9d13218a9ed1a49cc511d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(int3<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="1308" refid="helper__math_8h_1ac89b8c40de13d2f1a95cae298789b468" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(uint3<sp/>a,<sp/>uint3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(a.x<sp/>*<sp/>b.x,<sp/>a.y<sp/>*<sp/>b.y,<sp/>a.z<sp/>*<sp/>b.z);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315" refid="helper__math_8h_1ac9e3e676566d64db202254ef4c602194" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(uint3<sp/>&amp;a,<sp/>uint3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b.x;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b.y;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b.z;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="1324" refid="helper__math_8h_1a0a1ffe6cef9a7c2a2cc23f41e32daf34" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(uint3<sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(a.x<sp/>*<sp/>b,<sp/>a.y<sp/>*<sp/>b,<sp/>a.z<sp/>*<sp/>b);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="1331" refid="helper__math_8h_1ab3a015469ea502066f0a2f448d3d9166" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b,<sp/>uint3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(b<sp/>*<sp/>a.x,<sp/>b<sp/>*<sp/>a.y,<sp/>b<sp/>*<sp/>a.z);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338" refid="helper__math_8h_1ac30fe031aa979852fe32627f15d45ab4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(uint3<sp/>&amp;a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1347" refid="helper__math_8h_1aa79ec1961ab5b063ffaa382d57039cea" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(float4<sp/>a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(a.x<sp/>*<sp/>b.x,<sp/>a.y<sp/>*<sp/>b.y,<sp/>a.z<sp/>*<sp/>b.z,<sp/>a.w<sp/>*<sp/>b.w);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354" refid="helper__math_8h_1a62fcbb6894ddade365bc89f9128e6c9a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(float4<sp/>&amp;a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b.x;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b.y;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b.z;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>*=<sp/>b.w;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1364" refid="helper__math_8h_1ac7e568526659a104f9c3b3f3a863b76e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(float4<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(a.x<sp/>*<sp/>b,<sp/>a.y<sp/>*<sp/>b,<sp/>a.z<sp/>*<sp/>b,<sp/>a.w<sp/>*<sp/>b);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1371" refid="helper__math_8h_1adb820b73830dffd266502601044b14fc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/>float4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(b<sp/>*<sp/>a.x,<sp/>b<sp/>*<sp/>a.y,<sp/>b<sp/>*<sp/>a.z,<sp/>b<sp/>*<sp/>a.w);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378" refid="helper__math_8h_1a30bcc3374c27697a07b220631a67cdf6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(float4<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="1388" refid="helper__math_8h_1acde64949fbcc5f3300719c4e9ffa297d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(int4<sp/>a,<sp/>int4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(a.x<sp/>*<sp/>b.x,<sp/>a.y<sp/>*<sp/>b.y,<sp/>a.z<sp/>*<sp/>b.z,<sp/>a.w<sp/>*<sp/>b.w);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395" refid="helper__math_8h_1a2157668f44d6d5000cbe0774b9253829" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(int4<sp/>&amp;a,<sp/>int4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b.x;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b.y;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b.z;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>*=<sp/>b.w;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="1405" refid="helper__math_8h_1a4de4a5f61c6e5098515a369e10ae1f5a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(int4<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(a.x<sp/>*<sp/>b,<sp/>a.y<sp/>*<sp/>b,<sp/>a.z<sp/>*<sp/>b,<sp/>a.w<sp/>*<sp/>b);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="1412" refid="helper__math_8h_1af23b7528b681621cb21aaf5527971649" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>int4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(b<sp/>*<sp/>a.x,<sp/>b<sp/>*<sp/>a.y,<sp/>b<sp/>*<sp/>a.z,<sp/>b<sp/>*<sp/>a.w);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419" refid="helper__math_8h_1a47295bc56c32bfe456c123e7db992ae4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(int4<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="1429" refid="helper__math_8h_1af0103dc52a4425925fd3f8c3481d9a21" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(uint4<sp/>a,<sp/>uint4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(a.x<sp/>*<sp/>b.x,<sp/>a.y<sp/>*<sp/>b.y,<sp/>a.z<sp/>*<sp/>b.z,<sp/>a.w<sp/>*<sp/>b.w);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436" refid="helper__math_8h_1a060c2c4cbeed470a705ca4c141ea8edd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(uint4<sp/>&amp;a,<sp/>uint4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b.x;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b.y;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b.z;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>*=<sp/>b.w;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="1446" refid="helper__math_8h_1a56d003d2a289af0de90fce0f9b2c634d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(uint4<sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(a.x<sp/>*<sp/>b,<sp/>a.y<sp/>*<sp/>b,<sp/>a.z<sp/>*<sp/>b,<sp/>a.w<sp/>*<sp/>b);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="1453" refid="helper__math_8h_1a2be6e75cebfa87afcd004bccb00eab56" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a564af5e6ea1d02d67303e46b66322968" kindref="member">operator*</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b,<sp/>uint4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(b<sp/>*<sp/>a.x,<sp/>b<sp/>*<sp/>a.y,<sp/>b<sp/>*<sp/>a.z,<sp/>b<sp/>*<sp/>a.w);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460" refid="helper__math_8h_1af7fd6e0eac5f4bfdba238717b526229d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ac5c0e0a83839323239d97683b4a6c666" kindref="member">operator*=</ref>(uint4<sp/>&amp;a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="comment">//<sp/>divide</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="1474" refid="helper__math_8h_1a2778db976af87b1e1e3222b716806de7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2778db976af87b1e1e3222b716806de7" kindref="member">operator/</ref>(float2<sp/>a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(a.x<sp/>/<sp/>b.x,<sp/>a.y<sp/>/<sp/>b.y);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481" refid="helper__math_8h_1a6bb1f7c6f144b7d47c334c7354c7f6cb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a6bb1f7c6f144b7d47c334c7354c7f6cb" kindref="member">operator/=</ref>(float2<sp/>&amp;a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>/=<sp/>b.x;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>/=<sp/>b.y;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="1489" refid="helper__math_8h_1afb489248f1d5384266624387b2f8af68" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2778db976af87b1e1e3222b716806de7" kindref="member">operator/</ref>(float2<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(a.x<sp/>/<sp/>b,<sp/>a.y<sp/>/<sp/>b);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496" refid="helper__math_8h_1adfa0bd10b4524776ba513b17d458047d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a6bb1f7c6f144b7d47c334c7354c7f6cb" kindref="member">operator/=</ref>(float2<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>/=<sp/>b;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>/=<sp/>b;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="1504" refid="helper__math_8h_1a4a71826a673363eb0f60ba5a3d2b1279" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2778db976af87b1e1e3222b716806de7" kindref="member">operator/</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/>float2<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(b<sp/>/<sp/>a.x,<sp/>b<sp/>/<sp/>a.y);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="1511" refid="helper__math_8h_1a550637f7c0c6efac2589120c47fef0a5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2778db976af87b1e1e3222b716806de7" kindref="member">operator/</ref>(float3<sp/>a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x<sp/>/<sp/>b.x,<sp/>a.y<sp/>/<sp/>b.y,<sp/>a.z<sp/>/<sp/>b.z);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518" refid="helper__math_8h_1adb24839aab2f07ce73c08c2ae0743e9e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a6bb1f7c6f144b7d47c334c7354c7f6cb" kindref="member">operator/=</ref>(float3<sp/>&amp;a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>/=<sp/>b.x;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>/=<sp/>b.y;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>/=<sp/>b.z;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="1527" refid="helper__math_8h_1a357c54e0a0040d91efbdc9973a722ad2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2778db976af87b1e1e3222b716806de7" kindref="member">operator/</ref>(float3<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.x<sp/>/<sp/>b,<sp/>a.y<sp/>/<sp/>b,<sp/>a.z<sp/>/<sp/>b);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534" refid="helper__math_8h_1a354df0544ff3892b5c3cfb81a1c0397c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a6bb1f7c6f144b7d47c334c7354c7f6cb" kindref="member">operator/=</ref>(float3<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>/=<sp/>b;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>/=<sp/>b;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>/=<sp/>b;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="1543" refid="helper__math_8h_1ae0fc4c059957728a772ba2ff4d531ab9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2778db976af87b1e1e3222b716806de7" kindref="member">operator/</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/>float3<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(b<sp/>/<sp/>a.x,<sp/>b<sp/>/<sp/>a.y,<sp/>b<sp/>/<sp/>a.z);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1550" refid="helper__math_8h_1a70bc23a55f3cc4d26b45044fa99d6d61" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2778db976af87b1e1e3222b716806de7" kindref="member">operator/</ref>(float4<sp/>a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(a.x<sp/>/<sp/>b.x,<sp/>a.y<sp/>/<sp/>b.y,<sp/>a.z<sp/>/<sp/>b.z,<sp/>a.w<sp/>/<sp/>b.w);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557" refid="helper__math_8h_1afeddff2d8dce0e0ca15152ef9f3b6c6c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a6bb1f7c6f144b7d47c334c7354c7f6cb" kindref="member">operator/=</ref>(float4<sp/>&amp;a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>/=<sp/>b.x;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>/=<sp/>b.y;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>/=<sp/>b.z;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>/=<sp/>b.w;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1567" refid="helper__math_8h_1a690784b2d6b2d79ba5b091c7a57338f9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2778db976af87b1e1e3222b716806de7" kindref="member">operator/</ref>(float4<sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(a.x<sp/>/<sp/>b,<sp/>a.y<sp/>/<sp/>b,<sp/>a.z<sp/>/<sp/>b,<sp/>a.w<sp/>/<sp/>b);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574" refid="helper__math_8h_1a25c65bb4f9658c6bed436bdc83158a3e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a6bb1f7c6f144b7d47c334c7354c7f6cb" kindref="member">operator/=</ref>(float4<sp/>&amp;a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>a.x<sp/>/=<sp/>b;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>a.y<sp/>/=<sp/>b;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>a.z<sp/>/=<sp/>b;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>a.w<sp/>/=<sp/>b;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1584" refid="helper__math_8h_1ad64ba102fc8094ae523b2535be62cf10" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2778db976af87b1e1e3222b716806de7" kindref="member">operator/</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/>float4<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(b<sp/>/<sp/>a.x,<sp/>b<sp/>/<sp/>a.y,<sp/>b<sp/>/<sp/>a.z,<sp/>b<sp/>/<sp/>a.w);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="comment">//<sp/>min</highlight></codeline>
<codeline lineno="1591"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="1595" refid="helper__math_8h_1a273d356570807ab4546038f5792077b2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(float2<sp/>a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(<ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(a.y,<sp/>b.y));</highlight></codeline>
<codeline lineno="1597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="1602" refid="helper__math_8h_1afdb8567710b900ab3f50d023282e3f37" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(float3<sp/>a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(<ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(a.z,<sp/>b.z));</highlight></codeline>
<codeline lineno="1604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1609" refid="helper__math_8h_1accc123056028156af4471d825045701c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(float4<sp/>a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(<ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(a.z,<sp/>b.z),<sp/><ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(a.w,<sp/>b.w));</highlight></codeline>
<codeline lineno="1611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="1616" refid="helper__math_8h_1a4d54be3b6388d6a2a0d095b880de4d4a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(int2<sp/>a,<sp/>int2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(<ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.y,<sp/>b.y));</highlight></codeline>
<codeline lineno="1618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="1623" refid="helper__math_8h_1abe4b67087a13d8e4b8fd2d1333f05212" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(int3<sp/>a,<sp/>int3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(<ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.z,<sp/>b.z));</highlight></codeline>
<codeline lineno="1625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="1630" refid="helper__math_8h_1a9639a84213d2969e42ab11c25dd0d680" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(int4<sp/>a,<sp/>int4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(<ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.z,<sp/>b.z),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.w,<sp/>b.w));</highlight></codeline>
<codeline lineno="1632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="1637" refid="helper__math_8h_1adee4157b656ec731b83abe9389e9f054" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(uint2<sp/>a,<sp/>uint2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(<ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.y,<sp/>b.y));</highlight></codeline>
<codeline lineno="1639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="1644" refid="helper__math_8h_1aa85502e2b039b0145f512a848e70fa04" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(uint3<sp/>a,<sp/>uint3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(<ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.z,<sp/>b.z));</highlight></codeline>
<codeline lineno="1646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="1651" refid="helper__math_8h_1a76f3d844135ecc32365294158d274eed" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(uint4<sp/>a,<sp/>uint4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(<ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.z,<sp/>b.z),<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(a.w,<sp/>b.w));</highlight></codeline>
<codeline lineno="1653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="comment">//<sp/>max</highlight></codeline>
<codeline lineno="1658"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="1662" refid="helper__math_8h_1a0ac776761f333de82e2477b1d7c3d54f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(float2<sp/>a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(<ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(a.y,<sp/>b.y));</highlight></codeline>
<codeline lineno="1664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="1669" refid="helper__math_8h_1aa0e0b97a8c683602220c9509d12adefa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(float3<sp/>a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(<ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(a.z,<sp/>b.z));</highlight></codeline>
<codeline lineno="1671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1676" refid="helper__math_8h_1a0c102756578f129d7b0fde92ae6ca987" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(float4<sp/>a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(<ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(a.z,<sp/>b.z),<sp/><ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(a.w,<sp/>b.w));</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="1683" refid="helper__math_8h_1a0d1da99482e200287b0c786ff8f769eb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(int2<sp/>a,<sp/>int2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(<ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.y,<sp/>b.y));</highlight></codeline>
<codeline lineno="1685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="1690" refid="helper__math_8h_1a86bb61d22c0e88f85b47d9834f0ec34b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(int3<sp/>a,<sp/>int3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(<ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.z,<sp/>b.z));</highlight></codeline>
<codeline lineno="1692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="1697" refid="helper__math_8h_1a536ce9f92539916f71e252ab6397126c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(int4<sp/>a,<sp/>int4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(<ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.z,<sp/>b.z),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.w,<sp/>b.w));</highlight></codeline>
<codeline lineno="1699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="1704" refid="helper__math_8h_1ab3930c0956d728e3848e3bc6b369ec58" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(uint2<sp/>a,<sp/>uint2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(<ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.y,<sp/>b.y));</highlight></codeline>
<codeline lineno="1706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="1711" refid="helper__math_8h_1aec767b936d087f7dcf3f0a19bf48b7f7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(uint3<sp/>a,<sp/>uint3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(<ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.z,<sp/>b.z));</highlight></codeline>
<codeline lineno="1713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="1718" refid="helper__math_8h_1ad71de797aaa84d9c6a604b3d429fdbca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(uint4<sp/>a,<sp/>uint4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(<ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.z,<sp/>b.z),<sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a.w,<sp/>b.w));</highlight></codeline>
<codeline lineno="1720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="comment">//<sp/>lerp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>linear<sp/>interpolation<sp/>between<sp/>a<sp/>and<sp/>b,<sp/>based<sp/>on<sp/>value<sp/>t<sp/>in<sp/>[0,<sp/>1]<sp/>range</highlight></codeline>
<codeline lineno="1726"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730" refid="helper__math_8h_1a0c247aca1e9207d5e20ae113f2a96ba5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0c247aca1e9207d5e20ae113f2a96ba5" kindref="member">lerp</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>t<sp/>*<sp/>(b<sp/>-<sp/>a);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="1737" refid="helper__math_8h_1afa01684596e75b742f63e0d41a1550c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0c247aca1e9207d5e20ae113f2a96ba5" kindref="member">lerp</ref>(float2<sp/>a,<sp/>float2<sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>t<sp/>*<sp/>(b<sp/>-<sp/>a);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="1744" refid="helper__math_8h_1a6c6e32fb99074314ba8260052d28499c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0c247aca1e9207d5e20ae113f2a96ba5" kindref="member">lerp</ref>(float3<sp/>a,<sp/>float3<sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>t<sp/>*<sp/>(b<sp/>-<sp/>a);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1751" refid="helper__math_8h_1a6d2ec5d361f7fba020dcd34c41fd84a5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a0c247aca1e9207d5e20ae113f2a96ba5" kindref="member">lerp</ref>(float4<sp/>a,<sp/>float4<sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>t<sp/>*<sp/>(b<sp/>-<sp/>a);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="comment">//<sp/>clamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>clamp<sp/>the<sp/>value<sp/>v<sp/>to<sp/>be<sp/>in<sp/>the<sp/>range<sp/>[a,<sp/>b]</highlight></codeline>
<codeline lineno="1759"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763" refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a2e3ea020fe010be1ba2da473f17223b7" kindref="member">fmaxf</ref>(a,<sp/><ref refid="helper__math_8h_1a550f4f667b306665a335168336fc95b3" kindref="member">fminf</ref>(f,<sp/>b));</highlight></codeline>
<codeline lineno="1765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769" refid="helper__math_8h_1a71bcfdcaaea698c7db05f2a7cf13610d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="1770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a,<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(f,<sp/>b));</highlight></codeline>
<codeline lineno="1772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></highlight></codeline>
<codeline lineno="1777" refid="helper__math_8h_1a2ded928128f511790e69096352fcefb2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(<ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>f,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1af082905f7eac6d03e92015146bbc1925" kindref="member">max</ref>(a,<sp/><ref refid="helper__math_8h_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(f,<sp/>b));</highlight></codeline>
<codeline lineno="1779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="1784" refid="helper__math_8h_1a96f3477b0c986285c1e8961a91c03318" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(float2<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a,<sp/>b));</highlight></codeline>
<codeline lineno="1786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="1791" refid="helper__math_8h_1a3358bb66320d1f729c373dc6b263f3a9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(float2<sp/>v,<sp/>float2<sp/>a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a.y,<sp/>b.y));</highlight></codeline>
<codeline lineno="1793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="1798" refid="helper__math_8h_1a7899cceba82589cf107c88f733db3528" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(float3<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a,<sp/>b));</highlight></codeline>
<codeline lineno="1800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="1805" refid="helper__math_8h_1a8ae5a188faba8fab77dacf63dc979b47" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(float3<sp/>v,<sp/>float3<sp/>a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a.z,<sp/>b.z));</highlight></codeline>
<codeline lineno="1807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1812" refid="helper__math_8h_1a3f5286af2ed3b64cc71c61985098fad8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(float4<sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.w,<sp/>a,<sp/>b));</highlight></codeline>
<codeline lineno="1814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="1819" refid="helper__math_8h_1aba26c2414d4ea6e5eb528a22a62afe6c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(float4<sp/>v,<sp/>float4<sp/>a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a.z,<sp/>b.z),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.w,<sp/>a.w,<sp/>b.w));</highlight></codeline>
<codeline lineno="1822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="1827" refid="helper__math_8h_1ad1f08ef2aabcda2e2aca45d40fbc3397" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(int2<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a,<sp/>b));</highlight></codeline>
<codeline lineno="1829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="1834" refid="helper__math_8h_1a1ae68f45cd0e3e3446ad3b87b50862c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(int2<sp/>v,<sp/>int2<sp/>a,<sp/>int2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a.y,<sp/>b.y));</highlight></codeline>
<codeline lineno="1836"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="1841" refid="helper__math_8h_1a2ad0c85491bef8c0028ddaa95c992912" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(int3<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a,<sp/>b));</highlight></codeline>
<codeline lineno="1843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="1848" refid="helper__math_8h_1a6cfba17e55ca97509c5b3dcef48a31fc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(int3<sp/>v,<sp/>int3<sp/>a,<sp/>int3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a.z,<sp/>b.z));</highlight></codeline>
<codeline lineno="1850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="1855" refid="helper__math_8h_1aa3491b79aaeafdc9e3d7f087aa6ae9ed" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(int4<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.w,<sp/>a,<sp/>b));</highlight></codeline>
<codeline lineno="1857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="1862" refid="helper__math_8h_1afaec4cd721bf6372eb70a2676cf2b484" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(int4<sp/>v,<sp/>int4<sp/>a,<sp/>int4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a.z,<sp/>b.z),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.w,<sp/>a.w,<sp/>b.w));</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="1870" refid="helper__math_8h_1a138484df38165472bb41682c66484b7f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(uint2<sp/>v,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a,<sp/>b));</highlight></codeline>
<codeline lineno="1872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/>uint2</highlight></codeline>
<codeline lineno="1877" refid="helper__math_8h_1aa78b50210a589c1af94f367fc5e9b7cf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(uint2<sp/>v,<sp/>uint2<sp/>a,<sp/>uint2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0c63d36196448ce9bb8fb1d30db90a0c" kindref="member">make_uint2</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a.y,<sp/>b.y));</highlight></codeline>
<codeline lineno="1879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="1884" refid="helper__math_8h_1aadd5fb93f5da74428d05fa97d5546129" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(uint3<sp/>v,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a,<sp/>b));</highlight></codeline>
<codeline lineno="1886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>uint3</highlight></codeline>
<codeline lineno="1891" refid="helper__math_8h_1ab613d49c0404576007e0b149607a046a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(uint3<sp/>v,<sp/>uint3<sp/>a,<sp/>uint3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1adcf40e92c44d3592e8a6b6c9c50a031b" kindref="member">make_uint3</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a.z,<sp/>b.z));</highlight></codeline>
<codeline lineno="1893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="1898" refid="helper__math_8h_1a0ad021601699c2ce7896f811e8a6549f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(uint4<sp/>v,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>a,<sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(<ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a,<sp/>b),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.w,<sp/>a,<sp/>b));</highlight></codeline>
<codeline lineno="1900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/>uint4</highlight></codeline>
<codeline lineno="1905" refid="helper__math_8h_1ae7ec59161a1834bfdd2149b94cfb2ce9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(uint4<sp/>v,<sp/>uint4<sp/>a,<sp/>uint4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a71f7f876a3fbe496e2273c7dbe79c296" kindref="member">make_uint4</ref>(</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.x,<sp/>a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.y,<sp/>a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.z,<sp/>a.z,<sp/>b.z),<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>(v.w,<sp/>a.w,<sp/>b.w));</highlight></codeline>
<codeline lineno="1908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="comment">//<sp/>dot<sp/>product</highlight></codeline>
<codeline lineno="1913"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917" refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(float2<sp/>a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924" refid="helper__math_8h_1aa9cdc9f9c05b4fbdc7bb18b325de7e9a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(float3<sp/>a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y<sp/>+<sp/>a.z<sp/>*<sp/>b.z;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931" refid="helper__math_8h_1a0e2579b86f636edba4ea1b36484ffb4d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(float4<sp/>a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y<sp/>+<sp/>a.z<sp/>*<sp/>b.z<sp/>+<sp/>a.w<sp/>*<sp/>b.w;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937" refid="helper__math_8h_1a9a383c4a8a5548868b33c994702e5655" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(int2<sp/>a,<sp/>int2<sp/>b)</highlight></codeline>
<codeline lineno="1938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944" refid="helper__math_8h_1a55c003cc1dcaefb99143c01198ee38db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(int3<sp/>a,<sp/>int3<sp/>b)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y<sp/>+<sp/>a.z<sp/>*<sp/>b.z;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951" refid="helper__math_8h_1a81dd5802470fb915ca1d9bf7a107b1e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(int4<sp/>a,<sp/>int4<sp/>b)</highlight></codeline>
<codeline lineno="1952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y<sp/>+<sp/>a.z<sp/>*<sp/>b.z<sp/>+<sp/>a.w<sp/>*<sp/>b.w;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></highlight></codeline>
<codeline lineno="1959" refid="helper__math_8h_1a289fee22af9fcc39b6916225dbf215c5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(uint2<sp/>a,<sp/>uint2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></highlight></codeline>
<codeline lineno="1966" refid="helper__math_8h_1a0f4a723da388b8fe38ecfdf042934c8d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(uint3<sp/>a,<sp/>uint3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y<sp/>+<sp/>a.z<sp/>*<sp/>b.z;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></highlight></codeline>
<codeline lineno="1973" refid="helper__math_8h_1af381ed485d00cebfc4c52608646a7474" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(uint4<sp/>a,<sp/>uint4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.x<sp/>*<sp/>b.x<sp/>+<sp/>a.y<sp/>*<sp/>b.y<sp/>+<sp/>a.z<sp/>*<sp/>b.z<sp/>+<sp/>a.w<sp/>*<sp/>b.w;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="comment">//<sp/>length</highlight></codeline>
<codeline lineno="1980"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984" refid="helper__math_8h_1a2fcd5057894d92219f3d8e11e6ace2ff" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2fcd5057894d92219f3d8e11e6ace2ff" kindref="member">length</ref>(float2<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrtf(<ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(v,<sp/>v));</highlight></codeline>
<codeline lineno="1986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991" refid="helper__math_8h_1aa0ee40a3fc6118e9711f98a5087126b0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2fcd5057894d92219f3d8e11e6ace2ff" kindref="member">length</ref>(float3<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrtf(<ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(v,<sp/>v));</highlight></codeline>
<codeline lineno="1993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998" refid="helper__math_8h_1ad0e18f22f0bd104515d650409b5746bb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2fcd5057894d92219f3d8e11e6ace2ff" kindref="member">length</ref>(float4<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrtf(<ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(v,<sp/>v));</highlight></codeline>
<codeline lineno="2000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="comment">//<sp/>normalize</highlight></codeline>
<codeline lineno="2005"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="2009" refid="helper__math_8h_1a03895877c88d7a470fbd49f69742033a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a03895877c88d7a470fbd49f69742033a" kindref="member">normalize</ref>(float2<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>invLen<sp/>=<sp/><ref refid="helper__math_8h_1a03dd2c47cd23a00d16e39bfb75a2e6fe" kindref="member">rsqrtf</ref>(<ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(v,<sp/>v));</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>*<sp/>invLen;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="2017" refid="helper__math_8h_1af5ecbee670bc52b15d310a5affbb4bfd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a03895877c88d7a470fbd49f69742033a" kindref="member">normalize</ref>(float3<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>invLen<sp/>=<sp/><ref refid="helper__math_8h_1a03dd2c47cd23a00d16e39bfb75a2e6fe" kindref="member">rsqrtf</ref>(<ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(v,<sp/>v));</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>*<sp/>invLen;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="2025" refid="helper__math_8h_1ac6906e8e2670d8355f05f96d121fe451" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a03895877c88d7a470fbd49f69742033a" kindref="member">normalize</ref>(float4<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>invLen<sp/>=<sp/><ref refid="helper__math_8h_1a03dd2c47cd23a00d16e39bfb75a2e6fe" kindref="member">rsqrtf</ref>(<ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(v,<sp/>v));</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>*<sp/>invLen;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="comment">//<sp/>floor</highlight></codeline>
<codeline lineno="2033"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="2037" refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(float2<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(<ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(v.x),<sp/><ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(v.y));</highlight></codeline>
<codeline lineno="2039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="2044" refid="helper__math_8h_1a549835c169f172cf838f65d81f958421" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(float3<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(<ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(v.x),<sp/><ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(v.y),<sp/><ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(v.z));</highlight></codeline>
<codeline lineno="2046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="2051" refid="helper__math_8h_1a1bd42b705a0de4def6b605ef2699b9ee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(float4<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(<ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(v.x),<sp/><ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(v.y),<sp/><ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(v.z),<sp/><ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(v.w));</highlight></codeline>
<codeline lineno="2053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="comment">//<sp/>frac<sp/>-<sp/>returns<sp/>the<sp/>fractional<sp/>portion<sp/>of<sp/>a<sp/>scalar<sp/>or<sp/>each<sp/>vector<sp/>component</highlight></codeline>
<codeline lineno="2058"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062" refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>-<sp/><ref refid="helper__math_8h_1adf6628c6a1c008e290b58ae210f051d6" kindref="member">floorf</ref>(v);</highlight></codeline>
<codeline lineno="2064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="2069" refid="helper__math_8h_1ac26eb0c8f1fa7b38ea491354d953453b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(float2<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(<ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(v.x),<sp/><ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(v.y));</highlight></codeline>
<codeline lineno="2071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="2076" refid="helper__math_8h_1a87222927d3e8a5bf864b90ebd23e4531" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(float3<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(<ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(v.x),<sp/><ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(v.y),<sp/><ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(v.z));</highlight></codeline>
<codeline lineno="2078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="2083" refid="helper__math_8h_1aad5e4d519cb28ab64e0c38bdb786f729" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(float4<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(<ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(v.x),<sp/><ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(v.y),<sp/><ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(v.z),<sp/><ref refid="helper__math_8h_1aa8a9d57950bb3ca3835bece91188dbf4" kindref="member">fracf</ref>(v.w));</highlight></codeline>
<codeline lineno="2085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="comment">//<sp/>fmod</highlight></codeline>
<codeline lineno="2090"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="2094" refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(float2<sp/>a,<sp/>float2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(<ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(a.y,<sp/>b.y));</highlight></codeline>
<codeline lineno="2096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="2101" refid="helper__math_8h_1a6faff26c220db9b3a0e6288ee06ec521" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(float3<sp/>a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(<ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(a.z,<sp/>b.z));</highlight></codeline>
<codeline lineno="2103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="2108" refid="helper__math_8h_1a56aadc267ba639864d79188aa781423f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(float4<sp/>a,<sp/>float4<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(<ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(a.x,<sp/>b.x),<sp/><ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(a.y,<sp/>b.y),<sp/><ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(a.z,<sp/>b.z),<sp/><ref refid="helper__math_8h_1a49ad5cf537dac10aa125288115afb051" kindref="member">fmodf</ref>(a.w,<sp/>b.w));</highlight></codeline>
<codeline lineno="2110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="comment">//<sp/>absolute<sp/>value</highlight></codeline>
<codeline lineno="2115"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="2119" refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(float2<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(<ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(v.x),<sp/><ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(v.y));</highlight></codeline>
<codeline lineno="2121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="2126" refid="helper__math_8h_1a62721d5f250db151ae718f799c9a3dd7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(float3<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(<ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(v.x),<sp/><ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(v.y),<sp/><ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(v.z));</highlight></codeline>
<codeline lineno="2128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="2133" refid="helper__math_8h_1aa9ee264473011054a33354d0045161ce" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(float4<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(<ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(v.x),<sp/><ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(v.y),<sp/><ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(v.z),<sp/><ref refid="helper__math_8h_1aad6a2701675cd2a4bc1b1da7b79948ae" kindref="member">fabs</ref>(v.w));</highlight></codeline>
<codeline lineno="2135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/>int2</highlight></codeline>
<codeline lineno="2140" refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(int2<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a3be05aff487ded3c05aab21d24dd6439" kindref="member">make_int2</ref>(<ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(v.x),<sp/><ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(v.y));</highlight></codeline>
<codeline lineno="2142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/>int3</highlight></codeline>
<codeline lineno="2147" refid="helper__math_8h_1afe553b3ddd067e12861af3967b19f1cd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(int3<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aa72ad70768ab882bd2d74319b3afbcbe" kindref="member">make_int3</ref>(<ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(v.x),<sp/><ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(v.y),<sp/><ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(v.z));</highlight></codeline>
<codeline lineno="2149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/>int4</highlight></codeline>
<codeline lineno="2154" refid="helper__math_8h_1a7655a657941c02d7cc078ab3ec252ca0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(int4<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1a0438caa49958ffd7b60a6cd81bb7c4c0" kindref="member">make_int4</ref>(<ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(v.x),<sp/><ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(v.y),<sp/><ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(v.z),<sp/><ref refid="helper__math_8h_1ae4378072f9d836b0d4770a1514db2be3" kindref="member">abs</ref>(v.w));</highlight></codeline>
<codeline lineno="2156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="comment">//<sp/>reflect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>returns<sp/>reflection<sp/>of<sp/>incident<sp/>ray<sp/>I<sp/>around<sp/>surface<sp/>normal<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>N<sp/>should<sp/>be<sp/>normalized,<sp/>reflected<sp/>vector&apos;s<sp/>length<sp/>is<sp/>equal<sp/>to<sp/>length<sp/>of<sp/>I</highlight></codeline>
<codeline lineno="2163"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="2167" refid="helper__math_8h_1af41fd3e3e7014942f20fb620588803d7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1af41fd3e3e7014942f20fb620588803d7" kindref="member">reflect</ref>(float3<sp/>i,<sp/>float3<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>-<sp/>2.0f<sp/>*<sp/>n<sp/>*<sp/><ref refid="helper__math_8h_1aa81053cc504f50bd3cd8b5cc6f54b666" kindref="member">dot</ref>(n,<sp/>i);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="comment">//<sp/>cross<sp/>product</highlight></codeline>
<codeline lineno="2174"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__host__<sp/>__device__</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="2178" refid="helper__math_8h_1a2e4be24f36bc31a9d0b35540aaa5fb71" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a2e4be24f36bc31a9d0b35540aaa5fb71" kindref="member">cross</ref>(float3<sp/>a,<sp/>float3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(a.y<sp/>*<sp/>b.z<sp/>-<sp/>a.z<sp/>*<sp/>b.y,<sp/>a.z<sp/>*<sp/>b.x<sp/>-<sp/>a.x<sp/>*<sp/>b.z,<sp/>a.x<sp/>*<sp/>b.y<sp/>-<sp/>a.y<sp/>*<sp/>b.x);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="comment">//<sp/>smoothstep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>returns<sp/>0<sp/>if<sp/>x<sp/>&lt;<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>returns<sp/>1<sp/>if<sp/>x<sp/>&gt;<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>otherwise<sp/>returns<sp/>smooth<sp/>interpolation<sp/>between<sp/>0<sp/>and<sp/>1<sp/>based<sp/>on<sp/>x</highlight></codeline>
<codeline lineno="2188"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192" refid="helper__math_8h_1a3c69cf69820ec337d4b49ee5df17058c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3c69cf69820ec337d4b49ee5df17058c" kindref="member">smoothstep</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>((x<sp/>-<sp/>a)<sp/>/<sp/>(b<sp/>-<sp/>a),<sp/>0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(y<sp/>*<sp/>y<sp/>*<sp/>(3.0f<sp/>-<sp/>(2.0f<sp/>*<sp/>y)));</highlight></codeline>
<codeline lineno="2195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/>float2</highlight></codeline>
<codeline lineno="2200" refid="helper__math_8h_1a49db91bc8d6d57f347ca87dc1c70e2de" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3c69cf69820ec337d4b49ee5df17058c" kindref="member">smoothstep</ref>(float2<sp/>a,<sp/>float2<sp/>b,<sp/>float2<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/>float2<sp/>y<sp/>=<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>((x<sp/>-<sp/>a)<sp/>/<sp/>(b<sp/>-<sp/>a),<sp/>0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(y<sp/>*<sp/>y<sp/>*<sp/>(<ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(3.0f)<sp/>-<sp/>(<ref refid="helper__math_8h_1ae157a97cf7d77e6a05db0e0d22b85fb7" kindref="member">make_float2</ref>(2.0f)<sp/>*<sp/>y)));</highlight></codeline>
<codeline lineno="2203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/>float3</highlight></codeline>
<codeline lineno="2208" refid="helper__math_8h_1a803dfc03ce7a72b312ea14cd3d854e01" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3c69cf69820ec337d4b49ee5df17058c" kindref="member">smoothstep</ref>(float3<sp/>a,<sp/>float3<sp/>b,<sp/>float3<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/>float3<sp/>y<sp/>=<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>((x<sp/>-<sp/>a)<sp/>/<sp/>(b<sp/>-<sp/>a),<sp/>0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(y<sp/>*<sp/>y<sp/>*<sp/>(<ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(3.0f)<sp/>-<sp/>(<ref refid="helper__math_8h_1aff0ce950ea54e88da8eb7226e215646e" kindref="member">make_float3</ref>(2.0f)<sp/>*<sp/>y)));</highlight></codeline>
<codeline lineno="2211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/>__host__</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/>float4</highlight></codeline>
<codeline lineno="2216" refid="helper__math_8h_1a20180981da5c0ca777b200d5a68b5952" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="helper__math_8h_1a3c69cf69820ec337d4b49ee5df17058c" kindref="member">smoothstep</ref>(float4<sp/>a,<sp/>float4<sp/>b,<sp/>float4<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>float4<sp/>y<sp/>=<sp/><ref refid="helper__math_8h_1a4e52302c6978bafbb9336fc91bc8aee6" kindref="member">clamp</ref>((x<sp/>-<sp/>a)<sp/>/<sp/>(b<sp/>-<sp/>a),<sp/>0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(y<sp/>*<sp/>y<sp/>*<sp/>(<ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(3.0f)<sp/>-<sp/>(<ref refid="helper__math_8h_1a5ac86555d5a546106ec01ed56f8d48b4" kindref="member">make_float4</ref>(2.0f)<sp/>*<sp/>y)));</highlight></codeline>
<codeline lineno="2219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="librapid/include/librapid/cuda/helper_math.h"/>
  </compounddef>
</doxygen>
