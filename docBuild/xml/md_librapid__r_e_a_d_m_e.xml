<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="md_librapid__r_e_a_d_m_e" kind="page">
    <compoundname>md_librapid_README</compoundname>
    <title>LibRapid</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>High Performance C++ Library Mathematical Programs</para>
<para><ulink url="https://librapid.github.io/librapid/md_librapid__r_e_a_d_m_e.html"><bold>Latest Documentation</bold></ulink></para>
<sect1 id="md_librapid__r_e_a_d_m_e_1autotoc_md2">
<title>Installation</title>
<para>To use LibRapid in your CMake project, first clone the project:</para>
<para><programlisting><codeline><highlight class="normal">git<sp/>clone<sp/>--recursive<sp/>https://github.com/LibRapid/libRapid.git</highlight></codeline>
</programlisting></para>
<para>add the following to your <computeroutput>CMakeLists.txt</computeroutput>:</para>
<para><programlisting filename=".cmake"><codeline><highlight class="normal">add_subdirectory(librapid)</highlight></codeline>
<codeline><highlight class="normal">target_link_libraries(yourTarget<sp/>PUBLIC<sp/>librapid)</highlight></codeline>
</programlisting></para>
<para>Now, in your code, add the following where required:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="preprocessor">#include<sp/>&lt;librapid&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lrc<sp/>=<sp/><ref refid="namespacelibrapid" kindref="compound">librapid</ref>;<sp/></highlight><highlight class="comment">//<sp/>Optional<sp/>--<sp/>for<sp/>brevity</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_librapid__r_e_a_d_m_e_1autotoc_md3">
<title>Options</title>
<para>While I&apos;ve done the best to provide optimal default settings, sometimes they won&apos;t give you the results you want. LibRapid provides a range of runtime and compile-time options to customise the behaviour of your code.</para>
<sect2 id="md_librapid__r_e_a_d_m_e_1autotoc_md4">
<title>CMake Options</title>
<para>When using LibRapid in your CMake project, the following options are configurable (<computeroutput>name =&gt; default</computeroutput>):</para>
<para><itemizedlist>
<listitem><para><computeroutput>LIBRAPID_BUILD_EXAMPLES =&gt; OFF</computeroutput> (Build examples?)</para>
</listitem><listitem><para><computeroutput>LIBRAPID_BUILD_TESTS =&gt; OFF</computeroutput> (Build tests?)</para>
</listitem><listitem><para><computeroutput>LIBRAPID_STRICT =&gt; OFF</computeroutput> (Force warnings into errors?)</para>
</listitem><listitem><para><computeroutput>LIBRAPID_QUIET =&gt; OFF</computeroutput> (Disable warnings)</para>
</listitem><listitem><para><computeroutput>LIBRAPID_GET_BLAS =&gt; OFF</computeroutput> (Clone a prebuilt version of OpenBLAS?)</para>
</listitem><listitem><para><computeroutput>LIBRAPID_USE_CUDA =&gt; ON</computeroutput> (Automatically search for CUDA?)</para>
</listitem><listitem><para><computeroutput>LIBRAPID_USE_OMP =&gt; ON</computeroutput> (Automatically search for OpenMP?)</para>
</listitem><listitem><para><computeroutput>LIBRAPID_USE_MULTIPREC =&gt; OFF</computeroutput> (Include multiprecision library <ndash/> more on this elsewhere in documentation)</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_librapid__r_e_a_d_m_e_1autotoc_md5">
<title>Multithreading</title>
<para>By default, LibRapid will automatically run sufficiently large loops in paralle, however, the branch required for this dynamic selection can cause a very slight performance hit with smaller arrays. For this reason, if you know you&apos;ll only be dealing with relatively small arrays (500x500 or smaller), it might make sense to disable this.</para>
<para>To do so, simply define <computeroutput>LIBRAPID_OPTIMISE_SMALL_ARRAYS</computeroutput> before your <computeroutput>#include &lt;librapid&gt;</computeroutput></para>
<para>For more multithreading options, check out the <computeroutput><ref refid="namespacelibrapid_1_1global" kindref="compound">librapid::global</ref></computeroutput> namespace in the documentation.</para>
</sect2>
<sect2 id="md_librapid__r_e_a_d_m_e_1autotoc_md6">
<title>Debug Information</title>
<para>When compiling LibRapid in Release mode, you may want to enable the error checking and logging. It&apos;s enabled by default in debug mode.</para>
<para>To enable this, define <computeroutput>LIBRAPID_ENABLE_ASSERT</computeroutput> before including LibRapid.</para>
<para>Again, there are a few more settings for assertions in <computeroutput><ref refid="namespacelibrapid_1_1global" kindref="compound">librapid::global</ref></computeroutput> </para>
</sect2>
</sect1>
    </detaileddescription>
    <location file="librapid/README.md"/>
  </compounddef>
</doxygen>
