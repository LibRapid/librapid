<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4" kind="struct" language="C++" prot="public">
    <compoundname>librapid::typetraits::TypeInfo&lt; uint8_t &gt;</compoundname>
    <includes refid="traits_8hpp" local="no">traits.hpp</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a6d518bb9e92ac05b22be559af3b47112" prot="public" static="no">
        <type>uint8_t</type>
        <definition>using librapid::typetraits::TypeInfo&lt; uint8_t &gt;::Scalar =  uint8_t</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; uint8_t &gt;::Scalar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="150" column="1" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a996aee9402170e074444faef7bc48cdd" prot="public" static="no">
        <type>Vc::Vector&lt; uint8_t &gt;</type>
        <definition>using librapid::typetraits::TypeInfo&lt; uint8_t &gt;::Packet =  Vc::Vector&lt;uint8_t&gt;</definition>
        <argsstring></argsstring>
        <name>Packet</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; uint8_t &gt;::Packet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="151" column="1" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1aeb612dd275d76d21efe6e69f4e3295e9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; uint8_t &gt;::isLibRapidType</definition>
        <argsstring></argsstring>
        <name>isLibRapidType</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; uint8_t &gt;::isLibRapidType</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="149" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a0ced7f78dfb759b16bdfa7daf34d8e4c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int64_t</type>
        <definition>constexpr int64_t librapid::typetraits::TypeInfo&lt; uint8_t &gt;::packetWidth</definition>
        <argsstring></argsstring>
        <name>packetWidth</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; uint8_t &gt;::packetWidth</qualifiedname>
        <initializer>= Packet::size()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="152" column="26" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a6b0ce1fb8faedbb84097a864775775b4" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr char</type>
        <definition>constexpr char librapid::typetraits::TypeInfo&lt; uint8_t &gt;::name[]</definition>
        <argsstring>[]</argsstring>
        <name>name</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; uint8_t &gt;::name</qualifiedname>
        <initializer>= &quot;uint8_t&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="153" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a7fd1dba0a0f02cebc6c236a8cd1ea420" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; uint8_t &gt;::supportsArithmetic</definition>
        <argsstring></argsstring>
        <name>supportsArithmetic</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; uint8_t &gt;::supportsArithmetic</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="154" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a9ad378f3613d73a3b9b2e78715dd0779" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; uint8_t &gt;::supportsLogical</definition>
        <argsstring></argsstring>
        <name>supportsLogical</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; uint8_t &gt;::supportsLogical</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="155" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a6a94b622bbd4004485885e6f90eab0d1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; uint8_t &gt;::supportsBinary</definition>
        <argsstring></argsstring>
        <name>supportsBinary</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; uint8_t &gt;::supportsBinary</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="156" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1aa0b9e3778146c9af835f1888c3a973f8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; uint8_t &gt;::canAlign</definition>
        <argsstring></argsstring>
        <name>canAlign</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; uint8_t &gt;::canAlign</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="162" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1ade2727d7725679d6cb6d02906e8fd6da" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; uint8_t &gt;::canMemcpy</definition>
        <argsstring></argsstring>
        <name>canMemcpy</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; uint8_t &gt;::canMemcpy</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="163" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="librapid/include/librapid/core/traits.hpp" line="148" column="1" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="148" bodyend="164"/>
    <listofallmembers>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1aa0b9e3778146c9af835f1888c3a973f8" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; uint8_t &gt;</scope><name>canAlign</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1ade2727d7725679d6cb6d02906e8fd6da" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; uint8_t &gt;</scope><name>canMemcpy</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1aeb612dd275d76d21efe6e69f4e3295e9" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; uint8_t &gt;</scope><name>isLibRapidType</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a6b0ce1fb8faedbb84097a864775775b4" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; uint8_t &gt;</scope><name>name</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a996aee9402170e074444faef7bc48cdd" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; uint8_t &gt;</scope><name>Packet</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a0ced7f78dfb759b16bdfa7daf34d8e4c" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; uint8_t &gt;</scope><name>packetWidth</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a6d518bb9e92ac05b22be559af3b47112" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; uint8_t &gt;</scope><name>Scalar</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a7fd1dba0a0f02cebc6c236a8cd1ea420" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; uint8_t &gt;</scope><name>supportsArithmetic</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a6a94b622bbd4004485885e6f90eab0d1" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; uint8_t &gt;</scope><name>supportsBinary</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01uint8__t_01_4_1a9ad378f3613d73a3b9b2e78715dd0779" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; uint8_t &gt;</scope><name>supportsLogical</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
