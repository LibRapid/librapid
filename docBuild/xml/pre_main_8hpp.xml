<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="pre_main_8hpp" kind="file" language="C++">
    <compoundname>preMain.hpp</compoundname>
    <includedby refid="config_8hpp" local="yes">librapid/include/librapid/core/config.hpp</includedby>
    <invincdepgraph>
      <node id="5">
        <label>librapid/cxxblas/cxxblas.cxx</label>
        <link refid="cxxblas_8cxx"/>
      </node>
      <node id="4">
        <label>librapid/cxxblas/cxxblas.h</label>
        <link refid="cxxblas_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>librapid/cxxblas/level1/dot.h</label>
        <link refid="level1_2dot_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>librapid/cxxblas/level1/level1.h</label>
        <link refid="level1_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>librapid/include/librapid/core/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>librapid/include/librapid/core/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>librapid/include/librapid/core/preMain.hpp</label>
        <link refid="pre_main_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>librapid/include/librapid/librapid.hpp</label>
        <link refid="librapid_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>librapid/src/global.cpp</label>
        <link refid="global_8cpp"/>
      </node>
      <node id="10">
        <label>librapid/src/helper_cuda.cpp</label>
        <link refid="helper__cuda_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlibrapid_1_1detail_1_1_pre_main" prot="public">librapid::detail::PreMain</innerclass>
    <innernamespace refid="namespacelibrapid">librapid</innernamespace>
    <innernamespace refid="namespacelibrapid_1_1detail">librapid::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LIBRAPID_CORE_PREMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBRAPID_CORE_PREMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>defines<sp/>internal<sp/>functions<sp/>which<sp/>must<sp/>run<sp/>*before*<sp/>main()<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibrapid_1_1detail" kindref="compound">librapid::detail</ref><sp/>{</highlight></codeline>
<codeline lineno="9" refid="classlibrapid_1_1detail_1_1_pre_main" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibrapid_1_1detail_1_1_pre_main" kindref="compound">PreMain</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11" refid="classlibrapid_1_1detail_1_1_pre_main_1a53e2d6a634235e919a577fa521ef3fd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1detail_1_1_pre_main_1a53e2d6a634235e919a577fa521ef3fd5" kindref="member">PreMain</ref>()<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LIBRAPID_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>the<sp/>terminal<sp/>to<sp/>accept<sp/>ANSI<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system((</highlight><highlight class="stringliteral">&quot;chcp<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(CP_UTF8)).c_str());</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>LIBRAPID_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>must<sp/>be<sp/>declared<sp/>here<sp/>for<sp/>use<sp/>in<sp/>ASSERT<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="23" refid="namespacelibrapid_1_1detail_1a966dac3ffde86627510d37c264b7b0aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespacelibrapid_1_1detail_1a966dac3ffde86627510d37c264b7b0aa" kindref="member">internalMax</ref>(T<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Tn&gt;</highlight></codeline>
<codeline lineno="28" refid="namespacelibrapid_1_1detail_1abfb228b3a6fcbb72fd2e154750ac8f0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespacelibrapid_1_1detail_1a966dac3ffde86627510d37c264b7b0aa" kindref="member">internalMax</ref>(T<sp/>val,<sp/>Tn...<sp/>vals)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>maxOther<sp/>=<sp/><ref refid="namespacelibrapid_1_1detail_1a966dac3ffde86627510d37c264b7b0aa" kindref="member">internalMax</ref>(vals...);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val<sp/>&lt;<sp/>maxOther<sp/>?<sp/>maxOther<sp/>:<sp/>val;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="namespacelibrapid_1_1detail_1a5b88b14246f359e322c530eaa63f765a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1detail_1_1_pre_main" kindref="compound">PreMain</ref><sp/><ref refid="namespacelibrapid_1_1detail_1a5b88b14246f359e322c530eaa63f765a" kindref="member">preMain</ref><sp/>=<sp/><ref refid="classlibrapid_1_1detail_1_1_pre_main" kindref="compound">PreMain</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>librapid::detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>LIBRAPID_CORE_PREMAIN</highlight></codeline>
    </programlisting>
    <location file="librapid/include/librapid/core/preMain.hpp"/>
  </compounddef>
</doxygen>
