<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4" kind="struct" language="C++" prot="public">
    <compoundname>librapid::typetraits::TypeInfo&lt; float &gt;</compoundname>
    <includes refid="traits_8hpp" local="no">traits.hpp</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1a9bda8e18277b9f95e78a19039148ff08" prot="public" static="no">
        <type>float</type>
        <definition>using librapid::typetraits::TypeInfo&lt; float &gt;::Scalar =  float</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; float &gt;::Scalar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="283" column="1" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1ae1a5f760f62508f65c0b9ef056276a7c" prot="public" static="no">
        <type>Vc::Vector&lt; float &gt;</type>
        <definition>using librapid::typetraits::TypeInfo&lt; float &gt;::Packet =  Vc::Vector&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>Packet</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; float &gt;::Packet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="284" column="1" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1ab8ab07796810b7918197eb590942b794" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; float &gt;::isLibRapidType</definition>
        <argsstring></argsstring>
        <name>isLibRapidType</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; float &gt;::isLibRapidType</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="282" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1adddba9dee54268f4c44e556298ec18e5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int64_t</type>
        <definition>constexpr int64_t librapid::typetraits::TypeInfo&lt; float &gt;::packetWidth</definition>
        <argsstring></argsstring>
        <name>packetWidth</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; float &gt;::packetWidth</qualifiedname>
        <initializer>= Packet::size()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="285" column="26" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1ac95b7147ce1b3d6ac13037ba131ba5fe" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr char</type>
        <definition>constexpr char librapid::typetraits::TypeInfo&lt; float &gt;::name[]</definition>
        <argsstring>[]</argsstring>
        <name>name</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; float &gt;::name</qualifiedname>
        <initializer>= &quot;float&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="286" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1a080da6a6291e737fc8e5c3f75f1fed9f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; float &gt;::supportsArithmetic</definition>
        <argsstring></argsstring>
        <name>supportsArithmetic</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; float &gt;::supportsArithmetic</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="287" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1a8d749c1adfe9f69965bfd013e9abf550" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; float &gt;::supportsLogical</definition>
        <argsstring></argsstring>
        <name>supportsLogical</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; float &gt;::supportsLogical</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="288" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1a2d655a2f0e75a9905cf49175b5f11e06" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; float &gt;::supportsBinary</definition>
        <argsstring></argsstring>
        <name>supportsBinary</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; float &gt;::supportsBinary</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="289" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1ac5b48fac87c57a2d57a49b81a87bfdb6" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; float &gt;::canAlign</definition>
        <argsstring></argsstring>
        <name>canAlign</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; float &gt;::canAlign</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="295" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1a20ff05ae9ccb8f27c056a43ee60f8b1d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; float &gt;::canMemcpy</definition>
        <argsstring></argsstring>
        <name>canMemcpy</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; float &gt;::canMemcpy</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="296" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="librapid/include/librapid/core/traits.hpp" line="281" column="1" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="281" bodyend="297"/>
    <listofallmembers>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1ac5b48fac87c57a2d57a49b81a87bfdb6" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; float &gt;</scope><name>canAlign</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1a20ff05ae9ccb8f27c056a43ee60f8b1d" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; float &gt;</scope><name>canMemcpy</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1ab8ab07796810b7918197eb590942b794" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; float &gt;</scope><name>isLibRapidType</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1ac95b7147ce1b3d6ac13037ba131ba5fe" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; float &gt;</scope><name>name</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1ae1a5f760f62508f65c0b9ef056276a7c" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; float &gt;</scope><name>Packet</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1adddba9dee54268f4c44e556298ec18e5" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; float &gt;</scope><name>packetWidth</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1a9bda8e18277b9f95e78a19039148ff08" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; float &gt;</scope><name>Scalar</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1a080da6a6291e737fc8e5c3f75f1fed9f" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; float &gt;</scope><name>supportsArithmetic</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1a2d655a2f0e75a9905cf49175b5f11e06" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; float &gt;</scope><name>supportsBinary</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01float_01_4_1a8d749c1adfe9f69965bfd013e9abf550" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; float &gt;</scope><name>supportsLogical</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
