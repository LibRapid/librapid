<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4" kind="struct" language="C++" prot="public">
    <compoundname>librapid::typetraits::TypeInfo&lt; bool &gt;</compoundname>
    <includes refid="traits_8hpp" local="no">traits.hpp</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a53ca097dbf4f8c1dd43d3210fecad24b" prot="public" static="no">
        <type>bool</type>
        <definition>using librapid::typetraits::TypeInfo&lt; bool &gt;::Scalar =  bool</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; bool &gt;::Scalar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="93" column="1" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a5a335cecb0395aa62fce790092065b97" prot="public" static="no">
        <type>std::false_type</type>
        <definition>using librapid::typetraits::TypeInfo&lt; bool &gt;::Packet =  std::false_type</definition>
        <argsstring></argsstring>
        <name>Packet</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; bool &gt;::Packet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="94" column="1" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a683d328090aae896a3c3870a863216a8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; bool &gt;::isLibRapidType</definition>
        <argsstring></argsstring>
        <name>isLibRapidType</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; bool &gt;::isLibRapidType</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="92" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a79011c3d15280da25eaf7e2e7e59ec05" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int64_t</type>
        <definition>constexpr int64_t librapid::typetraits::TypeInfo&lt; bool &gt;::packetWidth</definition>
        <argsstring></argsstring>
        <name>packetWidth</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; bool &gt;::packetWidth</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="95" column="26" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a2c4195e00db293531a5f9282b694ec8b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr char</type>
        <definition>constexpr char librapid::typetraits::TypeInfo&lt; bool &gt;::name[]</definition>
        <argsstring>[]</argsstring>
        <name>name</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; bool &gt;::name</qualifiedname>
        <initializer>= &quot;char&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="96" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a132846627174b9da04c82971094f6b23" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; bool &gt;::supportsArithmetic</definition>
        <argsstring></argsstring>
        <name>supportsArithmetic</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; bool &gt;::supportsArithmetic</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="97" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a8bdfe633df48014d50f81d0b3369c001" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; bool &gt;::supportsLogical</definition>
        <argsstring></argsstring>
        <name>supportsLogical</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; bool &gt;::supportsLogical</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="98" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1ac2d9a66844259cf93d94fad52e2e8f99" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; bool &gt;::supportsBinary</definition>
        <argsstring></argsstring>
        <name>supportsBinary</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; bool &gt;::supportsBinary</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="99" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a75d2e6a1875dd89d584b33376cb1512c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; bool &gt;::canAlign</definition>
        <argsstring></argsstring>
        <name>canAlign</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; bool &gt;::canAlign</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="105" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a1d4d792042221efd9215f8dea4547a94" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool librapid::typetraits::TypeInfo&lt; bool &gt;::canMemcpy</definition>
        <argsstring></argsstring>
        <name>canMemcpy</name>
        <qualifiedname>librapid::typetraits::TypeInfo&lt; bool &gt;::canMemcpy</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/traits.hpp" line="106" column="23" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="librapid/include/librapid/core/traits.hpp" line="91" column="1" bodyfile="librapid/include/librapid/core/traits.hpp" bodystart="91" bodyend="107"/>
    <listofallmembers>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a75d2e6a1875dd89d584b33376cb1512c" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; bool &gt;</scope><name>canAlign</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a1d4d792042221efd9215f8dea4547a94" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; bool &gt;</scope><name>canMemcpy</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a683d328090aae896a3c3870a863216a8" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; bool &gt;</scope><name>isLibRapidType</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a2c4195e00db293531a5f9282b694ec8b" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; bool &gt;</scope><name>name</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a5a335cecb0395aa62fce790092065b97" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; bool &gt;</scope><name>Packet</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a79011c3d15280da25eaf7e2e7e59ec05" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; bool &gt;</scope><name>packetWidth</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a53ca097dbf4f8c1dd43d3210fecad24b" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; bool &gt;</scope><name>Scalar</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a132846627174b9da04c82971094f6b23" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; bool &gt;</scope><name>supportsArithmetic</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1ac2d9a66844259cf93d94fad52e2e8f99" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; bool &gt;</scope><name>supportsBinary</name></member>
      <member refid="structlibrapid_1_1typetraits_1_1_type_info_3_01bool_01_4_1a8bdfe633df48014d50f81d0b3369c001" prot="public" virt="non-virtual"><scope>librapid::typetraits::TypeInfo&lt; bool &gt;</scope><name>supportsLogical</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
