<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="namespacelibrapid_1_1typetraits_1_1impl" kind="namespace" language="C++">
    <compoundname>librapid::typetraits::impl</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacelibrapid_1_1typetraits_1_1impl_1a10fe8ed5bc301fec64946591cdcd3398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Index</type>
          </param>
          <param>
            <type>typename</type>
            <defval>decltype(std::declval&lt;T &amp;&gt;()[std::declval&lt;Index&gt;()])</defval>
          </param>
        </templateparamlist>
        <type>std::true_type</type>
        <definition>std::true_type librapid::typetraits::impl::testSubscript</definition>
        <argsstring>(int)</argsstring>
        <name>testSubscript</name>
        <qualifiedname>librapid::typetraits::impl::testSubscript</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/typetraits.hpp" line="29" column="16" declfile="librapid/include/librapid/core/typetraits.hpp" declline="29" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibrapid_1_1typetraits_1_1impl_1a7005145040e6223139c5fadc51c68f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Index</type>
          </param>
        </templateparamlist>
        <type>std::false_type</type>
        <definition>std::false_type librapid::typetraits::impl::testSubscript</definition>
        <argsstring>(float)</argsstring>
        <name>testSubscript</name>
        <qualifiedname>librapid::typetraits::impl::testSubscript</qualifiedname>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/typetraits.hpp" line="31" column="17" declfile="librapid/include/librapid/core/typetraits.hpp" declline="31" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibrapid_1_1typetraits_1_1impl_1a8979c0d42f06120b023f6f908fa4ce0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
          <param>
            <type>typename</type>
            <defval>decltype(std::declval&lt;T &amp;&gt;() + std::declval&lt;V &amp;&gt;())</defval>
          </param>
        </templateparamlist>
        <type>std::true_type</type>
        <definition>std::true_type librapid::typetraits::impl::testAddition</definition>
        <argsstring>(int)</argsstring>
        <name>testAddition</name>
        <qualifiedname>librapid::typetraits::impl::testAddition</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/typetraits.hpp" line="35" column="16" declfile="librapid/include/librapid/core/typetraits.hpp" declline="35" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibrapid_1_1typetraits_1_1impl_1adfcb2dc45fd94c735592700e40897fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>std::false_type</type>
        <definition>std::false_type librapid::typetraits::impl::testAddition</definition>
        <argsstring>(float)</argsstring>
        <name>testAddition</name>
        <qualifiedname>librapid::typetraits::impl::testAddition</qualifiedname>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/typetraits.hpp" line="37" column="17" declfile="librapid/include/librapid/core/typetraits.hpp" declline="37" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibrapid_1_1typetraits_1_1impl_1a010526521848e8fce0c283d6d6da1a12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
          <param>
            <type>typename</type>
            <defval>decltype(std::declval&lt;T &amp;&gt;() * std::declval&lt;V &amp;&gt;())</defval>
          </param>
        </templateparamlist>
        <type>std::true_type</type>
        <definition>std::true_type librapid::typetraits::impl::testMultiplication</definition>
        <argsstring>(int)</argsstring>
        <name>testMultiplication</name>
        <qualifiedname>librapid::typetraits::impl::testMultiplication</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/typetraits.hpp" line="41" column="16" declfile="librapid/include/librapid/core/typetraits.hpp" declline="41" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibrapid_1_1typetraits_1_1impl_1a38ab6e28df13c02db6d0dfdd5da550fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>std::false_type</type>
        <definition>std::false_type librapid::typetraits::impl::testMultiplication</definition>
        <argsstring>(float)</argsstring>
        <name>testMultiplication</name>
        <qualifiedname>librapid::typetraits::impl::testMultiplication</qualifiedname>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/typetraits.hpp" line="43" column="17" declfile="librapid/include/librapid/core/typetraits.hpp" declline="43" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibrapid_1_1typetraits_1_1impl_1a69e381454bd5edfca9462f5c88376c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename From</type>
          </param>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename</type>
            <defval>decltype((From)std::declval&lt;From &amp;&gt;())</defval>
          </param>
        </templateparamlist>
        <type>std::true_type</type>
        <definition>std::true_type librapid::typetraits::impl::testCast</definition>
        <argsstring>(int)</argsstring>
        <name>testCast</name>
        <qualifiedname>librapid::typetraits::impl::testCast</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/typetraits.hpp" line="46" column="16" declfile="librapid/include/librapid/core/typetraits.hpp" declline="46" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="namespacelibrapid_1_1typetraits_1_1impl_1a2354c060489f0084633d106f44c54f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename From</type>
          </param>
          <param>
            <type>typename To</type>
          </param>
        </templateparamlist>
        <type>std::false_type</type>
        <definition>std::false_type librapid::typetraits::impl::testCast</definition>
        <argsstring>(float)</argsstring>
        <name>testCast</name>
        <qualifiedname>librapid::typetraits::impl::testCast</qualifiedname>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="librapid/include/librapid/core/typetraits.hpp" line="48" column="17" declfile="librapid/include/librapid/core/typetraits.hpp" declline="48" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="librapid/include/librapid/core/typetraits.hpp" line="16" column="1"/>
  </compounddef>
</doxygen>
