<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="sizetype_8hpp" kind="file" language="C++">
    <compoundname>sizetype.hpp</compoundname>
    <includedby refid="array_8hpp" local="yes">librapid/include/librapid/array/array.hpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>librapid/include/librapid/array/array.hpp</label>
        <link refid="array_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>librapid/include/librapid/array/sizetype.hpp</label>
        <link refid="sizetype_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>librapid/include/librapid/librapid.hpp</label>
        <link refid="librapid_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>librapid/src/global.cpp</label>
        <link refid="global_8cpp"/>
      </node>
      <node id="5">
        <label>librapid/src/helper_cuda.cpp</label>
        <link refid="helper__cuda_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlibrapid_1_1_shape" prot="public">librapid::Shape</innerclass>
    <innernamespace refid="namespacelibrapid">librapid</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LIBRAPID_ARRAY_SIZETYPE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBRAPID_ARRAY_SIZETYPE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>defines<sp/>the<sp/>Shape<sp/>class<sp/>and<sp/>some<sp/>helper<sp/>functions,</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>including<sp/>stride<sp/>operations.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibrapid" kindref="compound">librapid</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>32&gt;</highlight></codeline>
<codeline lineno="11" refid="classlibrapid_1_1_shape" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13" refid="classlibrapid_1_1_shape_1a6778051d7d75730417c85a945337af14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape_1a6778051d7d75730417c85a945337af14" kindref="member">SizeType</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="14" refid="classlibrapid_1_1_shape_1abed6e0d3861a5258c0c78cf7ea22eb72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape_1abed6e0d3861a5258c0c78cf7ea22eb72" kindref="member">MaxDimensions</ref><sp/>=<sp/>N;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classlibrapid_1_1_shape_1a17f66d1a98e86b13d765b2f48f23c4c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape_1a17f66d1a98e86b13d765b2f48f23c4c5" kindref="member">Shape</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>V,<sp/>typename<sp/>typetraits::EnableIf&lt;typetraits::CanCast&lt;V,<sp/>T&gt;::value&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape_1a17f66d1a98e86b13d765b2f48f23c4c5" kindref="member">Shape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;V&gt;<sp/>&amp;vals);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>V,<sp/>typename<sp/>typetraits::EnableIf&lt;typetraits::CanCast&lt;V,<sp/>T&gt;::value&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape_1a17f66d1a98e86b13d765b2f48f23c4c5" kindref="member">Shape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;V&gt;<sp/>&amp;vals);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classlibrapid_1_1_shape_1a795789743e7fdf35c3d2e40a9d57a387" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape_1a795789743e7fdf35c3d2e40a9d57a387" kindref="member">Shape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>&amp;other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classlibrapid_1_1_shape_1a6b5f814b0da20d3e39ab7da4ed5f3d39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape_1a6b5f814b0da20d3e39ab7da4ed5f3d39" kindref="member">Shape</ref>(<ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>&amp;&amp;other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape_1a17f66d1a98e86b13d765b2f48f23c4c5" kindref="member">Shape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;V, Dim&gt;</ref><sp/>&amp;other);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape_1a17f66d1a98e86b13d765b2f48f23c4c5" kindref="member">Shape</ref>(<ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;V, Dim&gt;</ref><sp/>&amp;&amp;other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>V,<sp/>typename<sp/>typetraits::EnableIf&lt;typetraits::CanCast&lt;V,<sp/>T&gt;::value&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="59" refid="classlibrapid_1_1_shape_1a132608c1705432153d0f5275c6275567" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>&amp;<ref refid="classlibrapid_1_1_shape_1a132608c1705432153d0f5275c6275567" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;V&gt;<sp/>&amp;vals);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>V,<sp/>typename<sp/>typetraits::EnableIf&lt;typetraits::CanCast&lt;V,<sp/>T&gt;::value&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="66" refid="classlibrapid_1_1_shape_1aeeba65680903f473abb6ea4b0720539b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>&amp;<ref refid="classlibrapid_1_1_shape_1aeeba65680903f473abb6ea4b0720539b" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;V&gt;<sp/>&amp;vals);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classlibrapid_1_1_shape_1aaf9205371c0b2dc0e12ffd52add08c86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>&amp;<ref refid="classlibrapid_1_1_shape_1aaf9205371c0b2dc0e12ffd52add08c86" kindref="member">operator=</ref>(<ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>&amp;&amp;other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/><ref refid="classlibrapid_1_1_shape_1a407b80d75b21d23c9f4a8b7f69adfd93" kindref="member">zeros</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dims);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/><ref refid="classlibrapid_1_1_shape_1a556872fe85e1b79a7472652449de4c24" kindref="member">ones</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dims);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a75d0fe130ecba37781dedf98fb68bc0c" kindref="member">LIBRAPID_NODISCARD</ref><sp/><ref refid="generic_config_8hpp_1acd79ad2b933a0d50ede7ea0f03486aef" kindref="member">LIBRAPID_ALWAYS_INLINE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="classlibrapid_1_1_shape_1a2fead305af4ab538bcde7e83dd522ddc" kindref="member">operator[]</ref>(Index<sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a75d0fe130ecba37781dedf98fb68bc0c" kindref="member">LIBRAPID_NODISCARD</ref><sp/><ref refid="generic_config_8hpp_1acd79ad2b933a0d50ede7ea0f03486aef" kindref="member">LIBRAPID_ALWAYS_INLINE</ref><sp/>T<sp/>&amp;<ref refid="classlibrapid_1_1_shape_1a2fead305af4ab538bcde7e83dd522ddc" kindref="member">operator[]</ref>(Index<sp/>index);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generic_config_8hpp_1acd79ad2b933a0d50ede7ea0f03486aef" kindref="member">LIBRAPID_ALWAYS_INLINE</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape_1a6c0dd7521d282b8b3679f3badbe535da" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generic_config_8hpp_1acd79ad2b933a0d50ede7ea0f03486aef" kindref="member">LIBRAPID_ALWAYS_INLINE</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape_1ae4856ffa1441d77aaf2e6e10d485a762" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a75d0fe130ecba37781dedf98fb68bc0c" kindref="member">LIBRAPID_NODISCARD</ref><sp/>T<sp/><ref refid="classlibrapid_1_1_shape_1ab5d977f7d716aaeb122ec2b0fe681b4d" kindref="member">ndim</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a75d0fe130ecba37781dedf98fb68bc0c" kindref="member">LIBRAPID_NODISCARD</ref><sp/><ref refid="generic_config_8hpp_1acd79ad2b933a0d50ede7ea0f03486aef" kindref="member">LIBRAPID_ALWAYS_INLINE</ref><sp/>T<sp/><ref refid="classlibrapid_1_1_shape_1a8de69ce9f6e9d4625b99a82f652301a8" kindref="member">size</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a75d0fe130ecba37781dedf98fb68bc0c" kindref="member">LIBRAPID_NODISCARD</ref><sp/>std::string<sp/><ref refid="classlibrapid_1_1_shape_1a17feb24542bb561a8a53711b68f8e0c1" kindref="member">str</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120" refid="classlibrapid_1_1_shape_1ac29a39ec3113acefef839c1579c05603" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="classlibrapid_1_1_shape_1ac29a39ec3113acefef839c1579c05603" kindref="member">m_dims</ref>;</highlight></codeline>
<codeline lineno="121" refid="classlibrapid_1_1_shape_1a3de2ef5c2e3399ede89feaa7a4f9a6c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;T,<sp/>N&gt;<sp/><ref refid="classlibrapid_1_1_shape_1a3de2ef5c2e3399ede89feaa7a4f9a6c6" kindref="member">m_data</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>V,<sp/>typename<sp/>typetraits::EnableIf&lt;typetraits::CanCast&lt;V,<sp/>T&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="126" refid="classlibrapid_1_1_shape_1a62319e87033fd3989e54588bf2356cfc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape_1a17f66d1a98e86b13d765b2f48f23c4c5" kindref="member">Shape&lt;T, N&gt;::Shape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;V&gt;<sp/>&amp;vals)<sp/>:<sp/>m_dims(vals.size())<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generic_config_8hpp_1a69e316f2ab927d2834e632a12968e268" kindref="member">LIBRAPID_ASSERT</ref>(vals.size()<sp/>&lt;=<sp/>N,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shape<sp/>object<sp/>is<sp/>limited<sp/>to<sp/>{}<sp/>dimensions.<sp/>Cannot<sp/>initialize<sp/>with<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals.size());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vals.size();<sp/>++i)<sp/>{<sp/><ref refid="classlibrapid_1_1_shape_1a3de2ef5c2e3399ede89feaa7a4f9a6c6" kindref="member">m_data</ref>[i]<sp/>=<sp/>*(vals.begin()<sp/>+<sp/>i);<sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>V,<sp/>typename<sp/>typetraits::EnableIf&lt;typetraits::CanCast&lt;V,<sp/>T&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="136" refid="classlibrapid_1_1_shape_1aceac931d256c40598e2de23aa976ba36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape_1a17f66d1a98e86b13d765b2f48f23c4c5" kindref="member">Shape&lt;T, N&gt;::Shape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;V&gt;<sp/>&amp;vals)<sp/>:<sp/>m_dims(vals.size())<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generic_config_8hpp_1a69e316f2ab927d2834e632a12968e268" kindref="member">LIBRAPID_ASSERT</ref>(vals.size()<sp/>&lt;=<sp/>N,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shape<sp/>object<sp/>is<sp/>limited<sp/>to<sp/>{}<sp/>dimensions.<sp/>Cannot<sp/>initialize<sp/>with<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals.size());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vals.size();<sp/>++i)<sp/>{<sp/><ref refid="classlibrapid_1_1_shape_1a3de2ef5c2e3399ede89feaa7a4f9a6c6" kindref="member">m_data</ref>[i]<sp/>=<sp/>vals[i];<sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim&gt;</highlight></codeline>
<codeline lineno="146" refid="classlibrapid_1_1_shape_1a9e59b3e603930f8c27acc8b3dd41b489" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape_1a17f66d1a98e86b13d765b2f48f23c4c5" kindref="member">Shape&lt;T, N&gt;::Shape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;V, Dim&gt;</ref><sp/>&amp;other)<sp/>:<sp/>m_dims(other.ndim())<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generic_config_8hpp_1a69e316f2ab927d2834e632a12968e268" kindref="member">LIBRAPID_ASSERT</ref>(other.<ref refid="classlibrapid_1_1_shape_1ab5d977f7d716aaeb122ec2b0fe681b4d" kindref="member">ndim</ref>()<sp/>&lt;=<sp/>N,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shape<sp/>object<sp/>is<sp/>limited<sp/>to<sp/>{}<sp/>dimensions.<sp/>Cannot<sp/>initialize<sp/>with<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.<ref refid="classlibrapid_1_1_shape_1ab5d977f7d716aaeb122ec2b0fe681b4d" kindref="member">ndim</ref>());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classlibrapid_1_1_shape_1ac29a39ec3113acefef839c1579c05603" kindref="member">m_dims</ref>;<sp/>++i)<sp/>{<sp/><ref refid="classlibrapid_1_1_shape_1a3de2ef5c2e3399ede89feaa7a4f9a6c6" kindref="member">m_data</ref>[i]<sp/>=<sp/>other[i];<sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim&gt;</highlight></codeline>
<codeline lineno="156" refid="classlibrapid_1_1_shape_1a37740810da08c607414ac8df75e9468a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape_1a17f66d1a98e86b13d765b2f48f23c4c5" kindref="member">Shape&lt;T, N&gt;::Shape</ref>(<ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;V, Dim&gt;</ref><sp/>&amp;&amp;other)<sp/>noexcept<sp/>:<sp/>m_dims(other.ndim())<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generic_config_8hpp_1a69e316f2ab927d2834e632a12968e268" kindref="member">LIBRAPID_ASSERT</ref>(other.ndim()<sp/>&lt;=<sp/>N,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shape<sp/>object<sp/>is<sp/>limited<sp/>to<sp/>{}<sp/>dimensions.<sp/>Cannot<sp/>initialize<sp/>with<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.ndim());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_dims;<sp/>++i)<sp/>{<sp/>m_data[i]<sp/>=<sp/>other[i];<sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>V,<sp/>typename<sp/>typetraits::EnableIf&lt;typetraits::CanCast&lt;V,<sp/>T&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="166" refid="classlibrapid_1_1_shape_1a0266f42361b7c13ff6cae58184bf669e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;T, N&gt;</ref><sp/>&amp;<ref refid="classlibrapid_1_1_shape_1a132608c1705432153d0f5275c6275567" kindref="member">Shape&lt;T, N&gt;::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;V&gt;<sp/>&amp;vals)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generic_config_8hpp_1a69e316f2ab927d2834e632a12968e268" kindref="member">LIBRAPID_ASSERT</ref>(vals.size()<sp/>&lt;=<sp/>N,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shape<sp/>object<sp/>is<sp/>limited<sp/>to<sp/>{}<sp/>dimensions.<sp/>Cannot<sp/>initialize<sp/>with<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals.size());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dims<sp/>=<sp/>vals.size();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vals.size();<sp/>++i)<sp/>{<sp/>m_data[i]<sp/>=<sp/>*(vals.begin()<sp/>+<sp/>i);<sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>V,<sp/>typename<sp/>typetraits::EnableIf&lt;typetraits::CanCast&lt;V,<sp/>T&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="178" refid="classlibrapid_1_1_shape_1aa6ee48720d8ef2077fc75306581e1af0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;T, N&gt;</ref><sp/>&amp;<ref refid="classlibrapid_1_1_shape_1a132608c1705432153d0f5275c6275567" kindref="member">Shape&lt;T, N&gt;::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;V&gt;<sp/>&amp;vals)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="generic_config_8hpp_1a69e316f2ab927d2834e632a12968e268" kindref="member">LIBRAPID_ASSERT</ref>(vals.size()<sp/>&lt;=<sp/>N,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shape<sp/>object<sp/>is<sp/>limited<sp/>to<sp/>{}<sp/>dimensions.<sp/>Cannot<sp/>initialize<sp/>with<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals.size());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dims<sp/>=<sp/>vals.size();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vals.size();<sp/>++i)<sp/>{<sp/>m_data[i]<sp/>=<sp/>vals[i];<sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="189" refid="classlibrapid_1_1_shape_1a407b80d75b21d23c9f4a8b7f69adfd93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;T, N&gt;</ref><sp/><ref refid="classlibrapid_1_1_shape_1a407b80d75b21d23c9f4a8b7f69adfd93" kindref="member">Shape&lt;T, N&gt;::zeros</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dims)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>res;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.<ref refid="classlibrapid_1_1_shape_1ac29a39ec3113acefef839c1579c05603" kindref="member">m_dims</ref><sp/>=<sp/>dims;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dims;<sp/>++i)<sp/>res.<ref refid="classlibrapid_1_1_shape_1a3de2ef5c2e3399ede89feaa7a4f9a6c6" kindref="member">m_data</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="197" refid="classlibrapid_1_1_shape_1a556872fe85e1b79a7472652449de4c24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;T, N&gt;</ref><sp/><ref refid="classlibrapid_1_1_shape_1a556872fe85e1b79a7472652449de4c24" kindref="member">Shape&lt;T, N&gt;::ones</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dims)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>res;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.<ref refid="classlibrapid_1_1_shape_1ac29a39ec3113acefef839c1579c05603" kindref="member">m_dims</ref><sp/>=<sp/>dims;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dims;<sp/>++i)<sp/>res.<ref refid="classlibrapid_1_1_shape_1a3de2ef5c2e3399ede89feaa7a4f9a6c6" kindref="member">m_data</ref>[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="206" refid="classlibrapid_1_1_shape_1a2fead305af4ab538bcde7e83dd522ddc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a75d0fe130ecba37781dedf98fb68bc0c" kindref="member">LIBRAPID_NODISCARD</ref><sp/><ref refid="generic_config_8hpp_1acd79ad2b933a0d50ede7ea0f03486aef" kindref="member">LIBRAPID_ALWAYS_INLINE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="classlibrapid_1_1_shape_1a2fead305af4ab538bcde7e83dd522ddc" kindref="member">Shape&lt;T, N&gt;::operator[]</ref>(Index<sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data[index];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="212" refid="classlibrapid_1_1_shape_1a10aa7713d0c7f914cc23ceeb703392d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a75d0fe130ecba37781dedf98fb68bc0c" kindref="member">LIBRAPID_NODISCARD</ref><sp/><ref refid="generic_config_8hpp_1acd79ad2b933a0d50ede7ea0f03486aef" kindref="member">LIBRAPID_ALWAYS_INLINE</ref><sp/>T<sp/>&amp;<ref refid="classlibrapid_1_1_shape_1a2fead305af4ab538bcde7e83dd522ddc" kindref="member">Shape&lt;T, N&gt;::operator[]</ref>(Index<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data[index];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="217" refid="classlibrapid_1_1_shape_1a6c0dd7521d282b8b3679f3badbe535da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="generic_config_8hpp_1acd79ad2b933a0d50ede7ea0f03486aef" kindref="member">LIBRAPID_ALWAYS_INLINE</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape_1a6c0dd7521d282b8b3679f3badbe535da" kindref="member">Shape&lt;T, N&gt;::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dims<sp/>!=<sp/>other.<ref refid="classlibrapid_1_1_shape_1ac29a39ec3113acefef839c1579c05603" kindref="member">m_dims</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_dims;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_data[i]<sp/>!=<sp/>other.<ref refid="classlibrapid_1_1_shape_1a3de2ef5c2e3399ede89feaa7a4f9a6c6" kindref="member">m_data</ref>[i])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="226" refid="classlibrapid_1_1_shape_1ae4856ffa1441d77aaf2e6e10d485a762" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="generic_config_8hpp_1acd79ad2b933a0d50ede7ea0f03486aef" kindref="member">LIBRAPID_ALWAYS_INLINE</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape_1ae4856ffa1441d77aaf2e6e10d485a762" kindref="member">Shape&lt;T, N&gt;::operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="231" refid="classlibrapid_1_1_shape_1ab5d977f7d716aaeb122ec2b0fe681b4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a75d0fe130ecba37781dedf98fb68bc0c" kindref="member">LIBRAPID_NODISCARD</ref><sp/>T<sp/><ref refid="classlibrapid_1_1_shape_1ab5d977f7d716aaeb122ec2b0fe681b4d" kindref="member">Shape&lt;T, N&gt;::ndim</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_dims;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="236" refid="classlibrapid_1_1_shape_1a8de69ce9f6e9d4625b99a82f652301a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a75d0fe130ecba37781dedf98fb68bc0c" kindref="member">LIBRAPID_NODISCARD</ref><sp/><ref refid="generic_config_8hpp_1acd79ad2b933a0d50ede7ea0f03486aef" kindref="member">LIBRAPID_ALWAYS_INLINE</ref><sp/>T<sp/><ref refid="classlibrapid_1_1_shape_1a8de69ce9f6e9d4625b99a82f652301a8" kindref="member">Shape&lt;T, N&gt;::size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>res<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_dims;<sp/>++i)<sp/>res<sp/>*=<sp/>m_data[i];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="243" refid="classlibrapid_1_1_shape_1a17feb24542bb561a8a53711b68f8e0c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classlibrapid_1_1_shape_1a17feb24542bb561a8a53711b68f8e0c1" kindref="member">Shape&lt;T, N&gt;::str</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>result(</highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_dims;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/>m_data[i]);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>m_dims<sp/>-<sp/>1)<sp/>result<sp/>+=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacelibrapid_1ace1856766f37ba615f6a0591b11efce0" kindref="member">std::operator+</ref>(result,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Tn,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Nn&gt;</highlight></codeline>
<codeline lineno="264" refid="namespacelibrapid_1abddf27fef3beb213792f9fb0e92e00cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a75d0fe130ecba37781dedf98fb68bc0c" kindref="member">LIBRAPID_NODISCARD</ref><sp/><ref refid="generic_config_8hpp_1a081e76ebcc44646fdd281550e21b1b03" kindref="member">LIBRAPID_INLINE</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacelibrapid_1abddf27fef3beb213792f9fb0e92e00cc" kindref="member">shapesMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;T1, N1&gt;</ref><sp/>&amp;first,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;T2, N2&gt;</ref><sp/>&amp;second,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;Tn, Nn&gt;</ref><sp/>&amp;...shapes)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Tn)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first<sp/>==<sp/>second;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first<sp/>==<sp/>second<sp/>&amp;&amp;<sp/><ref refid="namespacelibrapid_1abddf27fef3beb213792f9fb0e92e00cc" kindref="member">shapesMatch</ref>(first,<sp/>shapes...);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Tn,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>Nn&gt;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_8hpp_1a75d0fe130ecba37781dedf98fb68bc0c" kindref="member">LIBRAPID_NODISCARD</ref><sp/><ref refid="generic_config_8hpp_1a081e76ebcc44646fdd281550e21b1b03" kindref="member">LIBRAPID_INLINE</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="namespacelibrapid_1a76827c461ec514d13594865944a58aae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelibrapid_1abddf27fef3beb213792f9fb0e92e00cc" kindref="member">shapesMatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::tuple&lt;<ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;T1, N1&gt;</ref>,<sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;T2, N2&gt;</ref>,<sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">Shape&lt;Tn, Nn&gt;</ref>...&gt;<sp/>&amp;shapes)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Tn)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;0&gt;(shapes)<sp/>==<sp/>std::get&lt;1&gt;(shapes);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;0&gt;(shapes)<sp/>==<sp/>std::get&lt;1&gt;(shapes)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelibrapid_1abddf27fef3beb213792f9fb0e92e00cc" kindref="member">shapesMatch</ref>(std::apply(</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">...<sp/>rest)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(rest...);<sp/>},<sp/>shapes));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>librapid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Support<sp/>FMT<sp/>printing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FMT_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><ref refid="helper_macros_8hpp_1a7d2d70de14d74180114ba0c483f78d87" kindref="member">LIBRAPID_SIMPLE_IO_IMPL</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/><ref refid="helper_macros_8hpp_1aa2f49001be13949a16a57e6c99ab00ad" kindref="member">COMMA</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/><ref refid="classlibrapid_1_1_shape" kindref="compound">librapid::Shape&lt;T COMMA N&gt;</ref>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>FMT_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>LIBRAPID_ARRAY_SIZETYPE_HPP</highlight></codeline>
    </programlisting>
    <location file="librapid/include/librapid/array/sizetype.hpp"/>
  </compounddef>
</doxygen>
