<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacendarray" kind="namespace" language="C++">
    <compoundname>ndarray</compoundname>
    <innerclass refid="classndarray_1_1basic__extent" prot="public">ndarray::basic_extent</innerclass>
    <innerclass refid="classndarray_1_1basic__ndarray" prot="public">ndarray::basic_ndarray</innerclass>
    <innerclass refid="classndarray_1_1basic__stride" prot="public">ndarray::basic_stride</innerclass>
    <innernamespace refid="namespacendarray_1_1arithmetic">ndarray::arithmetic</innernamespace>
    <innernamespace refid="namespacendarray_1_1broadcast">ndarray::broadcast</innernamespace>
    <innernamespace refid="namespacendarray_1_1math">ndarray::math</innernamespace>
    <innernamespace refid="namespacendarray_1_1to__string">ndarray::to_string</innernamespace>
    <innernamespace refid="namespacendarray_1_1utils">ndarray::utils</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="errors_8hpp_1a806677f89afaf40a454d10b14ae91ae8" prot="public" static="no" strong="yes">
        <type></type>
        <name>errors</name>
        <enumvalue id="errors_8hpp_1a806677f89afaf40a454d10b14ae91ae8a2b5138f5add1300c33f50325477147dc" prot="public">
          <name>ALL_OK</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="errors_8hpp_1a806677f89afaf40a454d10b14ae91ae8a577cf42cc2eae1cffef0f749c6c08787" prot="public">
          <name>INDEX_OUT_OF_RANGE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="errors_8hpp_1a806677f89afaf40a454d10b14ae91ae8ad3b018de7db49760f1da4de211d89304" prot="public">
          <name>ARRAY_DIMENSIONS_TOO_LARGE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/errors.hpp" line="6" column="1" bodyfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/errors.hpp" bodystart="7" bodyend="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="basic__extent_8hpp_1ad31c5e01fb33d0e476c569c772da0399" prot="public" static="no">
        <type><ref refid="classndarray_1_1basic__extent" kindref="compound">basic_extent</ref>&lt; nd_int &gt;</type>
        <definition>using ndarray::extent = typedef basic_extent&lt;nd_int&gt;</definition>
        <argsstring></argsstring>
        <name>extent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_extent.hpp" line="224" column="1" bodyfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_extent.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="basic__ndarray_8hpp_1aa5f3b1190653a46439980c67513493a1" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::allocator&lt; T &gt;</type>
        <definition>using ndarray::nd_allocator = typedef std::allocator&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>nd_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" line="18" column="1" bodyfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="basic__stride_8hpp_1a3d2f72feb66900f4801f0691ba57b0e6" prot="public" static="no">
        <type><ref refid="classndarray_1_1basic__stride" kindref="compound">basic_stride</ref>&lt; long long &gt;</type>
        <definition>using ndarray::stride = typedef basic_stride&lt;long long&gt;</definition>
        <argsstring></argsstring>
        <name>stride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_stride.hpp" line="265" column="1" bodyfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_stride.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="basic__extent_8hpp_1ab269931fe00c6820f83c08cf5e485af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ndarray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const basic_extent&lt; T &gt; &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classndarray_1_1basic__extent" kindref="compound">basic_extent</ref>&lt; T &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_extent.hpp" line="227" column="1" bodyfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_extent.hpp" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="basic__ndarray_8hpp_1ad419e879897e1bb9953666baeec3d665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A_T</type>
          </param>
          <param>
            <type>typename B_T</type>
          </param>
          <param>
            <type>typename B_A</type>
          </param>
        </templateparamlist>
        <type><ref refid="classndarray_1_1basic__ndarray" kindref="compound">basic_ndarray</ref>&lt; typename std::common_type&lt; A_T, B_T &gt;::type, nd_allocator&lt; typename std::common_type&lt; A_T, B_T &gt;::type &gt; &gt;</type>
        <definition>basic_ndarray&lt; typename std::common_type&lt; A_T, B_T &gt;::type, nd_allocator&lt; typename std::common_type&lt; A_T, B_T &gt;::type &gt; &gt; ndarray::operator+</definition>
        <argsstring>(const A_T &amp;val, const basic_ndarray&lt; B_T, B_A &gt; &amp;arr)</argsstring>
        <name>operator+</name>
        <param>
          <type>const A_T &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const <ref refid="classndarray_1_1basic__ndarray" kindref="compound">basic_ndarray</ref>&lt; B_T, B_A &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" line="1049" column="1" bodyfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" bodystart="1049" bodyend="1055" declfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" declline="27" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="basic__ndarray_8hpp_1af7c567de39421c7d410c4e94fbf6f6d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A_T</type>
          </param>
          <param>
            <type>typename B_T</type>
          </param>
          <param>
            <type>typename B_A</type>
          </param>
        </templateparamlist>
        <type><ref refid="classndarray_1_1basic__ndarray" kindref="compound">basic_ndarray</ref>&lt; typename std::common_type&lt; A_T, B_T &gt;::type, nd_allocator&lt; typename std::common_type&lt; A_T, B_T &gt;::type &gt; &gt;</type>
        <definition>basic_ndarray&lt; typename std::common_type&lt; A_T, B_T &gt;::type, nd_allocator&lt; typename std::common_type&lt; A_T, B_T &gt;::type &gt; &gt; ndarray::operator-</definition>
        <argsstring>(const A_T &amp;val, const basic_ndarray&lt; B_T, B_A &gt; &amp;arr)</argsstring>
        <name>operator-</name>
        <param>
          <type>const A_T &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const <ref refid="classndarray_1_1basic__ndarray" kindref="compound">basic_ndarray</ref>&lt; B_T, B_A &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" line="1060" column="1" bodyfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" bodystart="1060" bodyend="1066" declfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" declline="32" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="basic__ndarray_8hpp_1a5cffa3cd28cdcb591a122592c9391497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A_T</type>
          </param>
          <param>
            <type>typename B_T</type>
          </param>
          <param>
            <type>typename B_A</type>
          </param>
        </templateparamlist>
        <type><ref refid="classndarray_1_1basic__ndarray" kindref="compound">basic_ndarray</ref>&lt; typename std::common_type&lt; A_T, B_T &gt;::type, nd_allocator&lt; typename std::common_type&lt; A_T, B_T &gt;::type &gt; &gt;</type>
        <definition>basic_ndarray&lt; typename std::common_type&lt; A_T, B_T &gt;::type, nd_allocator&lt; typename std::common_type&lt; A_T, B_T &gt;::type &gt; &gt; ndarray::operator*</definition>
        <argsstring>(const A_T &amp;val, const basic_ndarray&lt; B_T, B_A &gt; &amp;arr)</argsstring>
        <name>operator*</name>
        <param>
          <type>const A_T &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const <ref refid="classndarray_1_1basic__ndarray" kindref="compound">basic_ndarray</ref>&lt; B_T, B_A &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" line="1071" column="1" bodyfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" bodystart="1071" bodyend="1077" declfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" declline="37" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="basic__ndarray_8hpp_1adeeba504fd1234c1fa2b67e2dab4a857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A_T</type>
          </param>
          <param>
            <type>typename B_T</type>
          </param>
          <param>
            <type>typename B_A</type>
          </param>
        </templateparamlist>
        <type><ref refid="classndarray_1_1basic__ndarray" kindref="compound">basic_ndarray</ref>&lt; typename std::common_type&lt; A_T, B_T &gt;::type, nd_allocator&lt; typename std::common_type&lt; A_T, B_T &gt;::type &gt; &gt;</type>
        <definition>basic_ndarray&lt; typename std::common_type&lt; A_T, B_T &gt;::type, nd_allocator&lt; typename std::common_type&lt; A_T, B_T &gt;::type &gt; &gt; ndarray::operator/</definition>
        <argsstring>(const A_T &amp;val, const basic_ndarray&lt; B_T, B_A &gt; &amp;arr)</argsstring>
        <name>operator/</name>
        <param>
          <type>const A_T &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const <ref refid="classndarray_1_1basic__ndarray" kindref="compound">basic_ndarray</ref>&lt; B_T, B_A &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" line="1082" column="1" bodyfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" bodystart="1082" bodyend="1088" declfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_ndarray.hpp" declline="42" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="basic__stride_8hpp_1a4827d4e09d7296367e64f886155aff9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ndarray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const basic_stride&lt; T &gt; &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classndarray_1_1basic__stride" kindref="compound">basic_stride</ref>&lt; T &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_stride.hpp" line="268" column="1" bodyfile="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/basic_stride.hpp" bodystart="268" bodyend="271"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/penci/OneDrive/Desktop/librapid/librapid/librapid/ndarray/array_arithmetic.hpp" line="7" column="1"/>
  </compounddef>
</doxygen>
